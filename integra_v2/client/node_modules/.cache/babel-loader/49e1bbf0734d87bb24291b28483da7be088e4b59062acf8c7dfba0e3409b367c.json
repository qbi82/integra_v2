{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE'\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2'\n};\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedType, setSelectedType] = useState('633663');\n  const allRegionIds = Object.keys(regionNames);\n  const [visibleRegions, setVisibleRegions] = useState(() => Object.fromEntries(allRegionIds.map(id => [id, true])));\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n  const [selectedRegionForTypes, setSelectedRegionForTypes] = useState(allRegionIds[0]);\n  const navigate = useNavigate();\n\n  // Wymuś logowanie\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data').then(res => res.json()).then(setData).catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg').then(res => res.json()).then(setNbpRefHistoryAvg).catch(() => {});\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/secure-data', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    }).then(res => res.json()).then(data => {\n      // obsłuż dane chronione\n      console.log('Dane chronione:', data);\n    }).catch(() => {\n      // obsłuż błąd autoryzacji\n    });\n  }, []);\n  if (err) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: err\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 19\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 21\n  }, this);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023);\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [{\n      label: 'Średnia roczna stopa referencyjna NBP',\n      data: nbpRefHistoryValues,\n      borderColor: 'orange',\n      backgroundColor: 'rgba(255,165,0,0.1)',\n      tension: 0.2\n    }]\n  };\n\n  // Wykres 1: regiony na jednym wykresie, typ mieszkania wybierany\n  const housingTypeData = data.housing[selectedType] || [];\n  const datasets = housingTypeData.filter(region => visibleRegions[region.regionId]).map(region => {\n    var _region$data;\n    const results = (((_region$data = region.data) === null || _region$data === void 0 ? void 0 : _region$data.results) || []).filter(r => {\n      var _r$values$;\n      return ((_r$values$ = r.values[0]) === null || _r$values$ === void 0 ? void 0 : _r$values$.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: regionNames[region.regionId] || region.regionId,\n      data: results.map(r => {\n        var _r$values$2;\n        return (_r$values$2 = r.values[0]) === null || _r$values$2 === void 0 ? void 0 : _r$values$2.val;\n      }),\n      borderColor: '#' + (Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567 % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2\n    };\n  });\n  const years = Array.from({\n    length: 11\n  }, (_, i) => (2013 + i).toString());\n  const housingChartData = {\n    labels: years,\n    datasets\n  };\n\n  // Wykres 2: typy mieszkań na jednym wykresie, region wybierany\n  const datasetsByType = Object.entries(housingTypeNames).map(([typeId, typeName]) => {\n    var _regionData$data;\n    const regionData = (data.housing[typeId] || []).find(r => r.regionId === selectedRegionForTypes);\n    const results = ((regionData === null || regionData === void 0 ? void 0 : (_regionData$data = regionData.data) === null || _regionData$data === void 0 ? void 0 : _regionData$data.results) || []).filter(r => {\n      var _r$values$3;\n      return ((_r$values$3 = r.values[0]) === null || _r$values$3 === void 0 ? void 0 : _r$values$3.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: typeName,\n      data: results.map(r => {\n        var _r$values$4;\n        return (_r$values$4 = r.values[0]) === null || _r$values$4 === void 0 ? void 0 : _r$values$4.val;\n      }),\n      borderColor: '#' + (Math.abs(typeId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 654321 % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2\n    };\n  });\n  const housingChartDataByType = {\n    labels: years,\n    datasets: datasetsByType\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel u\\u017Cytkownika\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      style: {\n        float: 'right',\n        marginTop: '-3rem'\n      },\n      children: \"Wyloguj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeste\\u015B zalogowany!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dane z BDL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Typ mieszkania:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedType,\n          onChange: e => setSelectedType(e.target.value),\n          children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: typeId,\n            children: name\n          }, typeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 1000,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ceny mieszka\\u0144 (wszystkie regiony, wybrany typ)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartData,\n        options: {\n          scales: {\n            y: {\n              title: {\n                display: true,\n                text: 'Cena (PLN)'\n              },\n              ticks: {\n                stepSize: 50000,\n                callback: function (value) {\n                  return value.toLocaleString('pl-PL') + ' zł';\n                }\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 1000,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ceny mieszka\\u0144 wg typu dla wybranego regionu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Wybierz region:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRegionForTypes,\n          onChange: e => setSelectedRegionForTypes(e.target.value),\n          children: allRegionIds.map(regionId => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: regionId,\n            children: regionNames[regionId]\n          }, regionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartDataByType,\n        options: {\n          scales: {\n            y: {\n              title: {\n                display: true,\n                text: 'Cena (PLN)'\n              },\n              ticks: {\n                stepSize: 50000,\n                callback: function (value) {\n                  return value.toLocaleString('pl-PL') + ' zł';\n                }\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 800,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Stopa referencyjna NBP (historia)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: nbpRefHistoryChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"uuVGlUtTOe7sq83MwrlNvtbKLo0=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","useNavigate","jsxDEV","_jsxDEV","register","regionNames","housingTypeNames","Dashboard","_s","data","setData","err","setErr","selectedType","setSelectedType","allRegionIds","Object","keys","visibleRegions","setVisibleRegions","fromEntries","map","id","nbpRefHistoryAvg","setNbpRefHistoryAvg","selectedRegionForTypes","setSelectedRegionForTypes","navigate","token","localStorage","getItem","fetch","then","res","json","catch","headers","Authorization","console","log","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","removeItem","nbpRefHistoryAvgFiltered","filter","r","parseInt","year","nbpRefHistoryLabels","nbpRefHistoryValues","avgRate","nbpRefHistoryChartData","labels","datasets","label","borderColor","backgroundColor","tension","housingTypeData","housing","region","regionId","_region$data","results","_r$values$","values","val","_r$values$2","Math","abs","split","reduce","a","c","charCodeAt","toString","padStart","years","Array","from","length","_","i","housingChartData","datasetsByType","entries","typeId","typeName","_regionData$data","regionData","find","_r$values$3","_r$values$4","housingChartDataByType","onClick","float","marginTop","value","onChange","e","target","name","maxWidth","margin","options","scales","y","title","display","text","ticks","stepSize","callback","toLocaleString","x","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE',\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2',\n};\n\nconst Dashboard = () => {\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedType, setSelectedType] = useState('633663');\n  const allRegionIds = Object.keys(regionNames);\n  const [visibleRegions, setVisibleRegions] = useState(() =>\n    Object.fromEntries(allRegionIds.map(id => [id, true]))\n  );\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n  const [selectedRegionForTypes, setSelectedRegionForTypes] = useState(allRegionIds[0]);\n  const navigate = useNavigate();\n\n  // Wymuś logowanie\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data')\n      .then(res => res.json())\n      .then(setData)\n      .catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg')\n      .then(res => res.json())\n      .then(setNbpRefHistoryAvg)\n      .catch(() => {});\n  }, []);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/secure-data', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        // obsłuż dane chronione\n        console.log('Dane chronione:', data);\n      })\n      .catch(() => {\n        // obsłuż błąd autoryzacji\n      });\n  }, []);\n\n  if (err) return <div style={{ color: 'red' }}>{err}</div>;\n  if (!data) return <div>Ładowanie danych...</div>;\n\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(\n    r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023\n  );\n\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [\n      {\n        label: 'Średnia roczna stopa referencyjna NBP',\n        data: nbpRefHistoryValues,\n        borderColor: 'orange',\n        backgroundColor: 'rgba(255,165,0,0.1)',\n        tension: 0.2,\n      },\n    ],\n  };\n\n  // Wykres 1: regiony na jednym wykresie, typ mieszkania wybierany\n  const housingTypeData = data.housing[selectedType] || [];\n  const datasets = housingTypeData\n    .filter(region => visibleRegions[region.regionId])\n    .map(region => {\n      const results = (region.data?.results || []).filter(\n        r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\n      );\n      return {\n        label: regionNames[region.regionId] || region.regionId,\n        data: results.map(r => r.values[0]?.val),\n        borderColor: '#' + ((Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567) % 0xffffff).toString(16).padStart(6, '0'),\n        backgroundColor: 'rgba(0,0,0,0.05)',\n        tension: 0.2,\n      };\n    });\n\n  const years = Array.from({ length: 11 }, (_, i) => (2013 + i).toString());\n\n  const housingChartData = {\n    labels: years,\n    datasets,\n  };\n\n  // Wykres 2: typy mieszkań na jednym wykresie, region wybierany\n  const datasetsByType = Object.entries(housingTypeNames).map(([typeId, typeName]) => {\n    const regionData = (data.housing[typeId] || []).find(r => r.regionId === selectedRegionForTypes);\n    const results = (regionData?.data?.results || []).filter(\n      r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\n    );\n    return {\n      label: typeName,\n      data: results.map(r => r.values[0]?.val),\n      borderColor: '#' + ((Math.abs(typeId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 654321) % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2,\n    };\n  });\n\n  const housingChartDataByType = {\n    labels: years,\n    datasets: datasetsByType,\n  };\n\n  return (\n    <div>\n      <h1>Panel użytkownika</h1>\n      <button onClick={handleLogout} style={{ float: 'right', marginTop: '-3rem' }}>Wyloguj</button>\n      <p>Jesteś zalogowany!</p>\n      <h2>Dane z BDL</h2>\n      <div>\n        <label>Typ mieszkania:&nbsp;\n          <select value={selectedType} onChange={e => setSelectedType(e.target.value)}>\n            {Object.entries(housingTypeNames).map(([typeId, name]) => (\n              <option key={typeId} value={typeId}>{name}</option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div style={{ maxWidth: 1000, margin: '2rem auto' }}>\n        <h3>Ceny mieszkań (wszystkie regiony, wybrany typ)</h3>\n        <Line\n          data={housingChartData}\n          options={{\n            scales: {\n              y: {\n                title: {\n                  display: true,\n                  text: 'Cena (PLN)'\n                },\n                ticks: {\n                  stepSize: 50000,\n                  callback: function(value) {\n                    return value.toLocaleString('pl-PL') + ' zł';\n                  }\n                }\n              },\n              x: {\n                title: {\n                  display: true,\n                  text: 'Rok'\n                }\n              }\n            }\n          }}\n        />\n        \n      </div>\n      <div style={{ maxWidth: 1000, margin: '2rem auto' }}>\n        <h3>Ceny mieszkań wg typu dla wybranego regionu</h3>\n        <label>\n          Wybierz region:&nbsp;\n          <select\n            value={selectedRegionForTypes}\n            onChange={e => setSelectedRegionForTypes(e.target.value)}\n          >\n            {allRegionIds.map(regionId => (\n              <option key={regionId} value={regionId}>\n                {regionNames[regionId]}\n              </option>\n            ))}\n          </select>\n        </label>\n        <Line\n          data={housingChartDataByType}\n          options={{\n            scales: {\n              y: {\n                title: {\n                  display: true,\n                  text: 'Cena (PLN)'\n                },\n                ticks: {\n                  stepSize: 50000,\n                  callback: function(value) {\n                    return value.toLocaleString('pl-PL') + ' zł';\n                  }\n                }\n              },\n              x: {\n                title: {\n                  display: true,\n                  text: 'Rok'\n                }\n              }\n            }\n          }}\n        />\n      </div>\n\n      <div style={{ maxWidth: 800, margin: '2rem auto' }}>\n        <h3>Stopa referencyjna NBP (historia)</h3>\n        <Line data={nbpRefHistoryChartData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/CV,OAAO,CAACW,QAAQ,CAACV,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMK,WAAW,GAAG;EAClB,cAAc,EAAE,2BAA2B;EAC3C,cAAc,EAAE,qBAAqB;EACrC,cAAc,EAAE,iBAAiB;EACjC,cAAc,EAAE,2BAA2B;EAC3C,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,4BAA4B;EAC5C,cAAc,EAAE,gBAAgB;EAChC,cAAc,EAAE,uBAAuB;EACvC,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,qBAAqB;EACrC,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,6BAA6B;EAC7C,cAAc,EAAE,8BAA8B;EAC9C,cAAc,EAAE,oBAAoB;EACpC,cAAc,EAAE,gBAAgB;EAChC,cAAc,EAAE,iBAAiB;EACjC,cAAc,EAAE;AAClB,CAAC;AACD,MAAMC,gBAAgB,GAAG;EACvB,QAAQ,EAAE,SAAS;EACnB,QAAQ,EAAE,oBAAoB;EAC9B,QAAQ,EAAE,iBAAiB;EAC3B,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqB,GAAG,EAAEC,MAAM,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,QAAQ,CAAC;EAC1D,MAAMyB,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACZ,WAAW,CAAC;EAC7C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,MACnD0B,MAAM,CAACI,WAAW,CAACL,YAAY,CAACM,GAAG,CAACC,EAAE,IAAI,CAACA,EAAE,EAAE,IAAI,CAAC,CAAC,CACvD,CAAC;EACD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACmC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGpC,QAAQ,CAACyB,YAAY,CAAC,CAAC,CAAC,CAAC;EACrF,MAAMY,QAAQ,GAAG1B,WAAW,CAAC,CAAC;;EAE9B;EACAZ,SAAS,CAAC,MAAM;IACd,MAAMuC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVD,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEdtC,SAAS,CAAC,MAAM;IACd0C,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACtB,OAAO,CAAC,CACbyB,KAAK,CAAC,MAAMvB,MAAM,CAAC,kCAAkC,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACd0C,KAAK,CAAC,+CAA+C,CAAC,CACnDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACR,mBAAmB,CAAC,CACzBW,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN9C,SAAS,CAAC,MAAM;IACd0C,KAAK,CAAC,uCAAuC,EAAE;MAC7CK,OAAO,EAAE;QACPC,aAAa,EAAE,SAAS,GAAGR,YAAY,CAACC,OAAO,CAAC,OAAO;MACzD;IACF,CAAC,CAAC,CACCE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACvB,IAAI,IAAI;MACZ;MACA6B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE9B,IAAI,CAAC;IACtC,CAAC,CAAC,CACD0B,KAAK,CAAC,MAAM;MACX;IAAA,CACD,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIxB,GAAG,EAAE,oBAAOR,OAAA;IAAKqC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,EAAE/B;EAAG;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACzD,IAAI,CAACrC,IAAI,EAAE,oBAAON,OAAA;IAAAuC,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAGhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBlB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;IAChCrB,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMsB,wBAAwB,GAAG1B,gBAAgB,CAAC2B,MAAM,CACtDC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,IAAID,QAAQ,CAACD,CAAC,CAACE,IAAI,EAAE,EAAE,CAAC,IAAI,IAC/D,CAAC;EAED,MAAMC,mBAAmB,GAAGL,wBAAwB,CAAC5B,GAAG,CAAC8B,CAAC,IAAIA,CAAC,CAACE,IAAI,CAAC;EACrE,MAAME,mBAAmB,GAAGN,wBAAwB,CAAC5B,GAAG,CAAC8B,CAAC,IAAIA,CAAC,CAACK,OAAO,CAAC;EAExE,MAAMC,sBAAsB,GAAG;IAC7BC,MAAM,EAAEJ,mBAAmB;IAC3BK,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,uCAAuC;MAC9CnD,IAAI,EAAE8C,mBAAmB;MACzBM,WAAW,EAAE,QAAQ;MACrBC,eAAe,EAAE,qBAAqB;MACtCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGvD,IAAI,CAACwD,OAAO,CAACpD,YAAY,CAAC,IAAI,EAAE;EACxD,MAAM8C,QAAQ,GAAGK,eAAe,CAC7Bd,MAAM,CAACgB,MAAM,IAAIhD,cAAc,CAACgD,MAAM,CAACC,QAAQ,CAAC,CAAC,CACjD9C,GAAG,CAAC6C,MAAM,IAAI;IAAA,IAAAE,YAAA;IACb,MAAMC,OAAO,GAAG,CAAC,EAAAD,YAAA,GAAAF,MAAM,CAACzD,IAAI,cAAA2D,YAAA,uBAAXA,YAAA,CAAaC,OAAO,KAAI,EAAE,EAAEnB,MAAM,CACjDC,CAAC;MAAA,IAAAmB,UAAA;MAAA,OAAI,EAAAA,UAAA,GAAAnB,CAAC,CAACoB,MAAM,CAAC,CAAC,CAAC,cAAAD,UAAA,uBAAXA,UAAA,CAAaE,GAAG,KAAI,IAAI,IAAIrB,CAAC,CAACE,IAAI,IAAI,IAAI,IAAIF,CAAC,CAACE,IAAI,IAAI,IAAI;IAAA,CACnE,CAAC;IACD,OAAO;MACLO,KAAK,EAAEvD,WAAW,CAAC6D,MAAM,CAACC,QAAQ,CAAC,IAAID,MAAM,CAACC,QAAQ;MACtD1D,IAAI,EAAE4D,OAAO,CAAChD,GAAG,CAAC8B,CAAC;QAAA,IAAAsB,WAAA;QAAA,QAAAA,WAAA,GAAItB,CAAC,CAACoB,MAAM,CAAC,CAAC,CAAC,cAAAE,WAAA,uBAAXA,WAAA,CAAaD,GAAG;MAAA,EAAC;MACxCX,WAAW,EAAE,GAAG,GAAG,CAAEa,IAAI,CAACC,GAAG,CAACT,MAAM,CAACC,QAAQ,CAACS,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,GAAI,QAAQ,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACtJpB,eAAe,EAAE,kBAAkB;MACnCC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC;EAEJ,MAAMoB,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,CAAC,IAAI,GAAGA,CAAC,EAAEP,QAAQ,CAAC,CAAC,CAAC;EAEzE,MAAMQ,gBAAgB,GAAG;IACvB/B,MAAM,EAAEyB,KAAK;IACbxB;EACF,CAAC;;EAED;EACA,MAAM+B,cAAc,GAAG1E,MAAM,CAAC2E,OAAO,CAACrF,gBAAgB,CAAC,CAACe,GAAG,CAAC,CAAC,CAACuE,MAAM,EAAEC,QAAQ,CAAC,KAAK;IAAA,IAAAC,gBAAA;IAClF,MAAMC,UAAU,GAAG,CAACtF,IAAI,CAACwD,OAAO,CAAC2B,MAAM,CAAC,IAAI,EAAE,EAAEI,IAAI,CAAC7C,CAAC,IAAIA,CAAC,CAACgB,QAAQ,KAAK1C,sBAAsB,CAAC;IAChG,MAAM4C,OAAO,GAAG,CAAC,CAAA0B,UAAU,aAAVA,UAAU,wBAAAD,gBAAA,GAAVC,UAAU,CAAEtF,IAAI,cAAAqF,gBAAA,uBAAhBA,gBAAA,CAAkBzB,OAAO,KAAI,EAAE,EAAEnB,MAAM,CACtDC,CAAC;MAAA,IAAA8C,WAAA;MAAA,OAAI,EAAAA,WAAA,GAAA9C,CAAC,CAACoB,MAAM,CAAC,CAAC,CAAC,cAAA0B,WAAA,uBAAXA,WAAA,CAAazB,GAAG,KAAI,IAAI,IAAIrB,CAAC,CAACE,IAAI,IAAI,IAAI,IAAIF,CAAC,CAACE,IAAI,IAAI,IAAI;IAAA,CACnE,CAAC;IACD,OAAO;MACLO,KAAK,EAAEiC,QAAQ;MACfpF,IAAI,EAAE4D,OAAO,CAAChD,GAAG,CAAC8B,CAAC;QAAA,IAAA+C,WAAA;QAAA,QAAAA,WAAA,GAAI/C,CAAC,CAACoB,MAAM,CAAC,CAAC,CAAC,cAAA2B,WAAA,uBAAXA,WAAA,CAAa1B,GAAG;MAAA,EAAC;MACxCX,WAAW,EAAE,GAAG,GAAG,CAAEa,IAAI,CAACC,GAAG,CAACiB,MAAM,CAAChB,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,GAAI,QAAQ,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC5IpB,eAAe,EAAE,kBAAkB;MACnCC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC;EAEF,MAAMoC,sBAAsB,GAAG;IAC7BzC,MAAM,EAAEyB,KAAK;IACbxB,QAAQ,EAAE+B;EACZ,CAAC;EAED,oBACEvF,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3C,OAAA;MAAQiG,OAAO,EAAErD,YAAa;MAACP,KAAK,EAAE;QAAE6D,KAAK,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAA5D,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9F3C,OAAA;MAAAuC,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACzB3C,OAAA;MAAAuC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB3C,OAAA;MAAAuC,QAAA,eACEvC,OAAA;QAAAuC,QAAA,GAAO,qBACL,eAAAvC,OAAA;UAAQoG,KAAK,EAAE1F,YAAa;UAAC2F,QAAQ,EAAEC,CAAC,IAAI3F,eAAe,CAAC2F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAA7D,QAAA,EACzE1B,MAAM,CAAC2E,OAAO,CAACrF,gBAAgB,CAAC,CAACe,GAAG,CAAC,CAAC,CAACuE,MAAM,EAAEe,IAAI,CAAC,kBACnDxG,OAAA;YAAqBoG,KAAK,EAAEX,MAAO;YAAAlD,QAAA,EAAEiE;UAAI,GAA5Bf,MAAM;YAAAjD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+B,CACnD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN3C,OAAA;MAAKqC,KAAK,EAAE;QAAEoE,QAAQ,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAY,CAAE;MAAAnE,QAAA,gBAClDvC,OAAA;QAAAuC,QAAA,EAAI;MAA8C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvD3C,OAAA,CAACZ,IAAI;QACHkB,IAAI,EAAEgF,gBAAiB;QACvBqB,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR,CAAC;cACDC,KAAK,EAAE;gBACLC,QAAQ,EAAE,KAAK;gBACfC,QAAQ,EAAE,SAAAA,CAASf,KAAK,EAAE;kBACxB,OAAOA,KAAK,CAACgB,cAAc,CAAC,OAAO,CAAC,GAAG,KAAK;gBAC9C;cACF;YACF,CAAC;YACDC,CAAC,EAAE;cACDP,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF;UACF;QACF;MAAE;QAAAxE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC,eACN3C,OAAA;MAAKqC,KAAK,EAAE;QAAEoE,QAAQ,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAY,CAAE;MAAAnE,QAAA,gBAClDvC,OAAA;QAAAuC,QAAA,EAAI;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpD3C,OAAA;QAAAuC,QAAA,GAAO,qBAEL,eAAAvC,OAAA;UACEoG,KAAK,EAAE9E,sBAAuB;UAC9B+E,QAAQ,EAAEC,CAAC,IAAI/E,yBAAyB,CAAC+E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAA7D,QAAA,EAExD3B,YAAY,CAACM,GAAG,CAAC8C,QAAQ,iBACxBhE,OAAA;YAAuBoG,KAAK,EAAEpC,QAAS;YAAAzB,QAAA,EACpCrC,WAAW,CAAC8D,QAAQ;UAAC,GADXA,QAAQ;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACR3C,OAAA,CAACZ,IAAI;QACHkB,IAAI,EAAE0F,sBAAuB;QAC7BW,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR,CAAC;cACDC,KAAK,EAAE;gBACLC,QAAQ,EAAE,KAAK;gBACfC,QAAQ,EAAE,SAAAA,CAASf,KAAK,EAAE;kBACxB,OAAOA,KAAK,CAACgB,cAAc,CAAC,OAAO,CAAC,GAAG,KAAK;gBAC9C;cACF;YACF,CAAC;YACDC,CAAC,EAAE;cACDP,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF;UACF;QACF;MAAE;QAAAxE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3C,OAAA;MAAKqC,KAAK,EAAE;QAAEoE,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAY,CAAE;MAAAnE,QAAA,gBACjDvC,OAAA;QAAAuC,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1C3C,OAAA,CAACZ,IAAI;QAACkB,IAAI,EAAEgD;MAAuB;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CAvNID,SAAS;EAAA,QAUIN,WAAW;AAAA;AAAAwH,EAAA,GAVxBlH,SAAS;AAyNf,eAAeA,SAAS;AAAC,IAAAkH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}