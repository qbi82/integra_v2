{"ast":null,"code":"var _jsxFileName = \"D:\\\\htdocs\\\\integra\\\\integra_v2\\\\integra_v2\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, BarController, Title, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, BarController, Title, Tooltip, Legend);\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE'\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2'\n};\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedBarType, setSelectedBarType] = useState('633663');\n  const [selectedType, setSelectedType] = useState('633663');\n  const allRegionIds = Object.keys(regionNames);\n  const [visibleRegions, setVisibleRegions] = useState(() => Object.fromEntries(allRegionIds.map(id => [id, true])));\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n  const [selectedRegionForTypes, setSelectedRegionForTypes] = useState(allRegionIds[0]);\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [showExport, setShowExport] = useState(false);\n  const [exportRegions, setExportRegions] = useState([allRegionIds[0]]);\n  const [exportTypes, setExportTypes] = useState([Object.keys(housingTypeNames)[0]]);\n  const [exportDateFrom, setExportDateFrom] = useState(2013);\n  const [exportDateTo, setExportDateTo] = useState(2023);\n  const [exportFormat, setExportFormat] = useState({\n    json: true,\n    xml: false\n  });\n  const handleExport = async () => {\n    const params = new URLSearchParams();\n    exportRegions.forEach(r => params.append('regions', r));\n    exportTypes.forEach(t => params.append('types', t));\n    params.append('dateFrom', exportDateFrom);\n    params.append('dateTo', exportDateTo);\n    if (exportFormat.json) params.append('format', 'json');\n    if (exportFormat.xml) params.append('format', 'xml');\n    const res = await fetch(`http://localhost:4000/api/export?${params.toString()}`, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    });\n    const blob = await res.blob();\n    const contentDisposition = res.headers.get('Content-Disposition');\n    let filename = 'export';\n    if (contentDisposition) {\n      const match = contentDisposition.match(/filename=\"?([^\"]+)\"?/);\n      if (match) filename = match[1];\n    }\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    setShowExport(false);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetch('http://localhost:4000/auth/me', {\n        headers: {\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => res.json()).then(data => setUsername(data.username || '')).catch(() => setUsername(''));\n    }\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data').then(res => res.json()).then(setData).catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg').then(res => res.json()).then(setNbpRefHistoryAvg).catch(() => {});\n  }, []);\n  if (err) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: err\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 19\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 21\n  }, this);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023);\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [{\n      label: 'Średnia roczna stopa referencyjna NBP',\n      data: nbpRefHistoryValues,\n      borderColor: 'orange',\n      backgroundColor: 'rgba(255,165,0,0.1)',\n      tension: 0.2\n    }]\n  };\n  const housingTypeData = data.housing[selectedType] || [];\n  const datasets = housingTypeData.filter(region => visibleRegions[region.regionId]).map(region => {\n    var _region$data;\n    const results = (((_region$data = region.data) === null || _region$data === void 0 ? void 0 : _region$data.results) || []).filter(r => {\n      var _r$values$;\n      return ((_r$values$ = r.values[0]) === null || _r$values$ === void 0 ? void 0 : _r$values$.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: regionNames[region.regionId] || region.regionId,\n      data: results.map(r => {\n        var _r$values$2;\n        return (_r$values$2 = r.values[0]) === null || _r$values$2 === void 0 ? void 0 : _r$values$2.val;\n      }),\n      borderColor: '#' + (Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567 % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2\n    };\n  });\n  const years = Array.from({\n    length: 11\n  }, (_, i) => (2013 + i).toString());\n  const housingChartData = {\n    labels: years,\n    datasets\n  };\n  const typeColors = ['#7b1fa2', '#1976d2', '#388e3c', '#fbc02d'];\n  const datasetsByType = Object.entries(housingTypeNames).map(([typeId, typeName], idx) => {\n    var _regionData$data;\n    const regionData = (data.housing[typeId] || []).find(r => r.regionId === selectedRegionForTypes);\n    const results = ((regionData === null || regionData === void 0 ? void 0 : (_regionData$data = regionData.data) === null || _regionData$data === void 0 ? void 0 : _regionData$data.results) || []).filter(r => {\n      var _r$values$3;\n      return ((_r$values$3 = r.values[0]) === null || _r$values$3 === void 0 ? void 0 : _r$values$3.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: typeName,\n      data: results.map(r => {\n        var _r$values$4;\n        return (_r$values$4 = r.values[0]) === null || _r$values$4 === void 0 ? void 0 : _r$values$4.val;\n      }),\n      borderColor: typeColors[idx],\n      backgroundColor: typeColors[idx] + '22',\n      tension: 0.2,\n      borderWidth: 4,\n      pointRadius: 2\n    };\n  });\n  const housingChartDataByType = {\n    labels: years,\n    datasets: datasetsByType\n  };\n  const barHousingTypeData = data.housing[selectedBarType] || [];\n  const avgPricesByYear = years.map(year => {\n    const values = barHousingTypeData.map(region => {\n      var _find, _find$values$, _region$data2;\n      return (_find = (((_region$data2 = region.data) === null || _region$data2 === void 0 ? void 0 : _region$data2.results) || []).find(r => r.year === parseInt(year))) === null || _find === void 0 ? void 0 : (_find$values$ = _find.values[0]) === null || _find$values$ === void 0 ? void 0 : _find$values$.val;\n    }).filter(v => v != null);\n    if (values.length === 0) return null;\n    return values.reduce((a, b) => a + b, 0) / values.length;\n  });\n  const nbpRatesByYear = years.map(year => {\n    var _nbpRefHistoryAvgFilt, _nbpRefHistoryAvgFilt2;\n    return (_nbpRefHistoryAvgFilt = (_nbpRefHistoryAvgFilt2 = nbpRefHistoryAvgFiltered.find(r => r.year === parseInt(year))) === null || _nbpRefHistoryAvgFilt2 === void 0 ? void 0 : _nbpRefHistoryAvgFilt2.avgRate) !== null && _nbpRefHistoryAvgFilt !== void 0 ? _nbpRefHistoryAvgFilt : null;\n  });\n  const barChartData = {\n    labels: years,\n    datasets: [{\n      type: 'bar',\n      label: 'Średnia cena mieszkań (PLN)',\n      data: avgPricesByYear,\n      backgroundColor: '#7b1fa2',\n      yAxisID: 'y',\n      order: 2\n    }, {\n      type: 'line',\n      label: 'Stopa referencyjna NBP (%)',\n      data: nbpRatesByYear,\n      borderColor: 'orange',\n      backgroundColor: 'rgba(255,165,0,0.15)',\n      yAxisID: 'y1',\n      tension: 0.2,\n      pointRadius: 3,\n      borderWidth: 5,\n      order: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      margin: '0 auto',\n      padding: '0px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-navbar-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dashboard-welcome\",\n          children: [\"Witaj\", username ? `, ${username}!` : '!']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-export-btn\",\n          onClick: () => setShowExport(true),\n          children: \"Eksportuj\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard-logout-btn\",\n        onClick: handleLogout,\n        children: \"Wyloguj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), showExport && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container export-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Eksport danych\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"export-modal-columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Regiony:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"export-regions-grid\",\n              children: allRegionIds.map(regionId => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: exportRegions.includes(regionId),\n                  onChange: e => {\n                    setExportRegions(regions => e.target.checked ? [...regions, regionId] : regions.filter(r => r !== regionId));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this), regionNames[regionId]]\n              }, regionId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Typy mieszka\\u0144:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"export-types-list\",\n              children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: exportTypes.includes(typeId),\n                  onChange: e => {\n                    setExportTypes(types => e.target.checked ? [...types, typeId] : types.filter(t => t !== typeId));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), name]\n              }, typeId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Zakres lat:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"2013\",\n            max: \"2023\",\n            value: exportDateFrom,\n            onChange: e => setExportDateFrom(Number(e.target.value)),\n            style: {\n              width: 70\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), ' ', \"do\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"2013\",\n            max: \"2023\",\n            value: exportDateTo,\n            onChange: e => setExportDateTo(Number(e.target.value)),\n            style: {\n              width: 70\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Format eksportu:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: exportFormat.json,\n              onChange: e => setExportFormat(f => ({\n                ...f,\n                json: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), \" JSON\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: exportFormat.xml,\n              onChange: e => setExportFormat(f => ({\n                ...f,\n                xml: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), \" XML\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExport,\n            disabled: !exportFormat.json && !exportFormat.xml,\n            children: \"Eksportuj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowExport(false),\n            style: {\n              marginLeft: 8\n            },\n            children: \"Anuluj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 20,\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        margin: '2rem auto',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 500,\n          maxWidth: 760,\n          maxHeight: 625\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chart-section-title\",\n          children: \"Ceny mieszka\\u0144 (wszystkie regiony, wybrany typ)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section-select\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Typ mieszkania:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedType,\n              onChange: e => setSelectedType(e.target.value),\n              children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: typeId,\n                children: name\n              }, typeId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: housingChartData,\n          options: {\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: 'top',\n                labels: {\n                  boxWidth: 20,\n                  font: {\n                    size: 12\n                  },\n                  padding: 10\n                }\n              }\n            },\n            elements: {\n              point: {\n                radius: 2,\n                borderWidth: 4,\n                backgroundColor: '#fff'\n              }\n            },\n            scales: {\n              y: {\n                title: {\n                  display: true,\n                  text: 'Cena (PLN)'\n                },\n                ticks: {\n                  stepSize: 50000,\n                  callback: function (value) {\n                    return value.toLocaleString('pl-PL') + ' zł';\n                  }\n                }\n              },\n              x: {\n                title: {\n                  display: true,\n                  text: 'Rok'\n                }\n              }\n            }\n          },\n          height: 400,\n          width: 700\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 500,\n          maxWidth: 750,\n          maxHeight: 510\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chart-section-title\",\n          style: {\n            paddingBottom: 146\n          },\n          children: \"Stopa referencyjna NBP (historia)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: nbpRefHistoryChartData,\n          options: {\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: 'top',\n                labels: {\n                  boxWidth: 20,\n                  font: {\n                    size: 12\n                  },\n                  padding: 10\n                }\n              }\n            },\n            elements: {\n              point: {\n                radius: 2,\n                borderWidth: 4,\n                backgroundColor: '#fff'\n              }\n            }\n          },\n          height: 500,\n          width: 700\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'block',\n        width: '100%',\n        maxWidth: 1000,\n        margin: '10rem auto 2rem auto',\n        clear: 'both'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chart-section-title\",\n        children: \"Ceny mieszka\\u0144 wg typu dla wybranego regionu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section-select\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Wybierz region:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedRegionForTypes,\n            onChange: e => setSelectedRegionForTypes(e.target.value),\n            children: allRegionIds.map(regionId => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: regionId,\n              children: regionNames[regionId]\n            }, regionId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartDataByType,\n        options: {\n          scales: {\n            y: {\n              title: {\n                display: true,\n                text: 'Cena (PLN)'\n              },\n              ticks: {\n                stepSize: 50000,\n                callback: function (value) {\n                  return value.toLocaleString('pl-PL') + ' zł';\n                }\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              }\n            }\n          },\n          elements: {\n            point: {\n              radius: 3,\n              borderWidth: 5\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'block',\n        width: '100%',\n        maxWidth: 1100,\n        margin: '4rem auto 1rem auto',\n        clear: 'both'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chart-section-title\",\n        children: \"\\u015Arednia cena mieszka\\u0144 (wszystkie regiony, wybrany typ) i stopy referencyjne NBP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section-select\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Typ mieszkania:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedBarType,\n            onChange: e => setSelectedBarType(e.target.value),\n            children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: typeId,\n              children: name\n            }, typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: barChartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            tooltip: {\n              mode: 'index',\n              intersect: false\n            }\n          },\n          elements: {\n            bar: {\n              barPercentage: 0.7,\n              categoryPercentage: 0.7\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              position: 'left',\n              title: {\n                display: true,\n                text: 'Cena (PLN)'\n              },\n              ticks: {\n                callback: value => value.toLocaleString('pl-PL') + ' zł',\n                beginAtZero: true\n              }\n            },\n            y1: {\n              type: 'linear',\n              position: 'right',\n              title: {\n                display: true,\n                text: 'Stopa referencyjna (%)'\n              },\n              grid: {\n                drawOnChartArea: false\n              },\n              min: 0,\n              max: 8\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              }\n            }\n          }\n        },\n        width: 800,\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"i0rnXFm+tsgAL4KUD6ficJnnEPE=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","BarController","Title","Tooltip","Legend","useNavigate","Bar","jsxDEV","_jsxDEV","register","regionNames","housingTypeNames","Dashboard","_s","data","setData","err","setErr","selectedBarType","setSelectedBarType","selectedType","setSelectedType","allRegionIds","Object","keys","visibleRegions","setVisibleRegions","fromEntries","map","id","nbpRefHistoryAvg","setNbpRefHistoryAvg","selectedRegionForTypes","setSelectedRegionForTypes","navigate","username","setUsername","showExport","setShowExport","exportRegions","setExportRegions","exportTypes","setExportTypes","exportDateFrom","setExportDateFrom","exportDateTo","setExportDateTo","exportFormat","setExportFormat","json","xml","handleExport","params","URLSearchParams","forEach","r","append","t","res","fetch","toString","headers","Authorization","localStorage","getItem","blob","contentDisposition","get","filename","match","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","token","then","catch","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","removeItem","nbpRefHistoryAvgFiltered","filter","parseInt","year","nbpRefHistoryLabels","nbpRefHistoryValues","avgRate","nbpRefHistoryChartData","labels","datasets","label","borderColor","backgroundColor","tension","housingTypeData","housing","region","regionId","_region$data","results","_r$values$","values","val","_r$values$2","Math","abs","split","reduce","c","charCodeAt","padStart","years","Array","from","length","_","i","housingChartData","typeColors","datasetsByType","entries","typeId","typeName","idx","_regionData$data","regionData","find","_r$values$3","_r$values$4","borderWidth","pointRadius","housingChartDataByType","barHousingTypeData","avgPricesByYear","_find","_find$values$","_region$data2","v","b","nbpRatesByYear","_nbpRefHistoryAvgFilt","_nbpRefHistoryAvgFilt2","barChartData","type","yAxisID","order","width","margin","padding","className","onClick","position","top","left","height","background","display","alignItems","justifyContent","zIndex","checked","includes","onChange","e","regions","target","name","types","min","max","value","Number","f","marginLeft","marginTop","disabled","gap","flex","minWidth","maxWidth","maxHeight","options","maintainAspectRatio","plugins","legend","boxWidth","font","size","elements","point","radius","scales","y","title","text","ticks","stepSize","callback","toLocaleString","x","paddingBottom","clear","responsive","tooltip","mode","intersect","bar","barPercentage","categoryPercentage","beginAtZero","y1","grid","drawOnChartArea","_c","$RefreshReg$"],"sources":["D:/htdocs/integra/integra_v2/integra_v2/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,    \r\n  BarController, \r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement,  BarElement, \r\n  BarController,Title, Tooltip, Legend);\r\n\r\nconst regionNames = {\r\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\r\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\r\n  '031610000000': 'REGION OPOLSKIE',\r\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\r\n  '042210000000': 'REGION POMORSKIE',\r\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\r\n  '051010000000': 'REGION ŁÓDZKIE',\r\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\r\n  '060610000000': 'REGION LUBELSKIE',\r\n  '061810000000': 'REGION PODKARPACKIE',\r\n  '062010000000': 'REGION PODLASKIE',\r\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\r\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\r\n  '011210000000': 'REGION MAŁOPOLSKIE',\r\n  '012410000000': 'REGION ŚLĄSKIE',\r\n  '020810000000': 'REGION LUBUSKIE',\r\n  '023010000000': 'REGION WIELKOPOLSKIE',\r\n};\r\nconst housingTypeNames = {\r\n  '633663': 'do 40m2',\r\n  '633664': 'od 40.1 m2 do 60m2',\r\n  '633665': 'od 60m2 do 80m2',\r\n  '633666': 'od 80m2',\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState(null);\r\n  const [err, setErr] = useState('');\r\n  const [selectedBarType, setSelectedBarType] = useState('633663');\r\n  const [selectedType, setSelectedType] = useState('633663'); \r\n  const allRegionIds = Object.keys(regionNames);\r\n  const [visibleRegions, setVisibleRegions] = useState(() =>\r\n    Object.fromEntries(allRegionIds.map(id => [id, true]))\r\n  );\r\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\r\n  const [selectedRegionForTypes, setSelectedRegionForTypes] = useState(allRegionIds[0]);\r\n  const navigate = useNavigate();\r\n\r\n  const [username, setUsername] = useState('');\r\n\r\n  const [showExport, setShowExport] = useState(false);\r\n  const [exportRegions, setExportRegions] = useState([allRegionIds[0]]);\r\n  const [exportTypes, setExportTypes] = useState([Object.keys(housingTypeNames)[0]]);\r\n  const [exportDateFrom, setExportDateFrom] = useState(2013);\r\n  const [exportDateTo, setExportDateTo] = useState(2023);\r\n  const [exportFormat, setExportFormat] = useState({ json: true, xml: false });\r\n\r\n  const handleExport = async () => {\r\n    const params = new URLSearchParams();\r\n    exportRegions.forEach(r => params.append('regions', r));\r\n    exportTypes.forEach(t => params.append('types', t));\r\n    params.append('dateFrom', exportDateFrom);\r\n    params.append('dateTo', exportDateTo);\r\n    if (exportFormat.json) params.append('format', 'json');\r\n    if (exportFormat.xml) params.append('format', 'xml');\r\n\r\n    const res = await fetch(`http://localhost:4000/api/export?${params.toString()}`, {\r\n      headers: { Authorization: 'Bearer ' + localStorage.getItem('token') }\r\n    });\r\n    const blob = await res.blob();\r\n    const contentDisposition = res.headers.get('Content-Disposition');\r\n    let filename = 'export';\r\n    if (contentDisposition) {\r\n      const match = contentDisposition.match(/filename=\"?([^\"]+)\"?/);\r\n      if (match) filename = match[1];\r\n    }\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    setShowExport(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n\r\n useEffect(() => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    fetch('http://localhost:4000/auth/me', {\r\n      headers: { Authorization: 'Bearer ' + token }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setUsername(data.username || ''))\r\n      .catch(() => setUsername(''));\r\n  }\r\n}, []);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/api/bdl-data')\r\n      .then(res => res.json())\r\n      .then(setData)\r\n      .catch(() => setErr('Błąd pobierania danych z serwera'));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/api/nbp-ref-history-avg')\r\n      .then(res => res.json())\r\n      .then(setNbpRefHistoryAvg)\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  if (err) return <div style={{ color: 'red' }}>{err}</div>;\r\n  if (!data) return <div>Ładowanie danych...</div>;\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  };\r\n\r\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(\r\n    r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023\r\n  );\r\n\r\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\r\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\r\n\r\n  const nbpRefHistoryChartData = {\r\n    labels: nbpRefHistoryLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Średnia roczna stopa referencyjna NBP',\r\n        data: nbpRefHistoryValues,\r\n        borderColor: 'orange',\r\n        backgroundColor: 'rgba(255,165,0,0.1)',\r\n        tension: 0.2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const housingTypeData = data.housing[selectedType] || [];\r\n  const datasets = housingTypeData\r\n    .filter(region => visibleRegions[region.regionId])\r\n    .map(region => {\r\n      const results = (region.data?.results || []).filter(\r\n        r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\r\n      );\r\n      return {\r\n        label: regionNames[region.regionId] || region.regionId,\r\n        data: results.map(r => r.values[0]?.val),\r\n        borderColor: '#' + ((Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567) % 0xffffff).toString(16).padStart(6, '0'),\r\n        backgroundColor: 'rgba(0,0,0,0.05)',\r\n        tension: 0.2,\r\n      };\r\n    });\r\n\r\n  const years = Array.from({ length: 11 }, (_, i) => (2013 + i).toString());\r\n\r\n  const housingChartData = {\r\n    labels: years,\r\n    datasets,\r\n  };\r\n\r\n  const typeColors = [\r\n    '#7b1fa2', \r\n    '#1976d2', \r\n    '#388e3c',\r\n    '#fbc02d', \r\n  ];\r\n\r\n  const datasetsByType = Object.entries(housingTypeNames).map(([typeId, typeName], idx) => {\r\n    const regionData = (data.housing[typeId] || []).find(r => r.regionId === selectedRegionForTypes);\r\n    const results = (regionData?.data?.results || []).filter(\r\n      r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\r\n    );\r\n    return {\r\n      label: typeName,\r\n      data: results.map(r => r.values[0]?.val),\r\n      borderColor: typeColors[idx],\r\n      backgroundColor: typeColors[idx] + '22', \r\n      tension: 0.2,\r\n      borderWidth: 4,\r\n      pointRadius: 2,\r\n    };\r\n  });\r\n\r\n  const housingChartDataByType = {\r\n    labels: years,\r\n    datasets: datasetsByType,\r\n  };\r\n\r\n  const barHousingTypeData = data.housing[selectedBarType] || [];\r\n  const avgPricesByYear = years.map(year => {\r\n    const values = barHousingTypeData\r\n      .map(region =>\r\n        (region.data?.results || []).find(r => r.year === parseInt(year))?.values[0]?.val\r\n      )\r\n      .filter(v => v != null);\r\n    if (values.length === 0) return null;\r\n    return values.reduce((a, b) => a + b, 0) / values.length;\r\n  });\r\n\r\n  const nbpRatesByYear = years.map(year =>\r\n    nbpRefHistoryAvgFiltered.find(r => r.year === parseInt(year))?.avgRate ?? null\r\n  );\r\n\r\n  const barChartData = {\r\n    labels: years,\r\n    datasets: [\r\n      {\r\n        type: 'bar',\r\n        label: 'Średnia cena mieszkań (PLN)',\r\n        data: avgPricesByYear,\r\n        backgroundColor: '#7b1fa2',\r\n        yAxisID: 'y',\r\n        order: 2,\r\n      },\r\n      {\r\n        type: 'line',\r\n        label: 'Stopa referencyjna NBP (%)',\r\n        data: nbpRatesByYear,\r\n        borderColor: 'orange',\r\n        backgroundColor: 'rgba(255,165,0,0.15)',\r\n        yAxisID: 'y1',\r\n        tension: 0.2,\r\n        pointRadius: 3,\r\n        borderWidth: 5,\r\n        order: 1,\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ width:'100%', margin: '0 auto', padding: '0px' }}>\r\n      <div className=\"dashboard-navbar\">\r\n        <div className=\"dashboard-navbar-left\">\r\n          <span className=\"dashboard-welcome\">\r\n            Witaj{username ? `, ${username}!` : '!'}\r\n          </span>\r\n          <button className=\"dashboard-export-btn\" onClick={() => setShowExport(true)}>\r\n            Eksportuj\r\n          </button>\r\n        </div>\r\n        <button className=\"dashboard-logout-btn\" onClick={handleLogout}>\r\n          Wyloguj\r\n        </button>\r\n      </div>\r\n      {showExport && (\r\n        <div style={{\r\n          position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\r\n          background: 'rgba(0,0,0,0.3)', display: 'flex', alignItems: 'center', justifyContent: 'center', zIndex: 1000\r\n        }}>\r\n          <div className=\"login-container export-modal\">\r\n            <h3>Eksport danych</h3>\r\n            <div className=\"export-modal-columns\">\r\n              <div>\r\n                <strong>Regiony:</strong>\r\n                <div className=\"export-regions-grid\">\r\n                  {allRegionIds.map(regionId => (\r\n                    <label key={regionId}>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={exportRegions.includes(regionId)}\r\n                        onChange={e => {\r\n                          setExportRegions(regions =>\r\n                            e.target.checked\r\n                              ? [...regions, regionId]\r\n                              : regions.filter(r => r !== regionId)\r\n                          );\r\n                        }}\r\n                      />\r\n                      {regionNames[regionId]}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <strong>Typy mieszkań:</strong>\r\n                <div className=\"export-types-list\">\r\n                  {Object.entries(housingTypeNames).map(([typeId, name]) => (\r\n                    <label key={typeId}>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={exportTypes.includes(typeId)}\r\n                        onChange={e => {\r\n                          setExportTypes(types =>\r\n                            e.target.checked\r\n                              ? [...types, typeId]\r\n                              : types.filter(t => t !== typeId)\r\n                          );\r\n                        }}\r\n                      />\r\n                      {name}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <strong>Zakres lat:</strong><br />\r\n              <input\r\n                type=\"number\"\r\n                min=\"2013\"\r\n                max=\"2023\"\r\n                value={exportDateFrom}\r\n                onChange={e => setExportDateFrom(Number(e.target.value))}\r\n                style={{ width: 70 }}\r\n              />{' '}\r\n              do{' '}\r\n              <input\r\n                type=\"number\"\r\n                min=\"2013\"\r\n                max=\"2023\"\r\n                value={exportDateTo}\r\n                onChange={e => setExportDateTo(Number(e.target.value))}\r\n                style={{ width: 70 }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <strong>Format eksportu:</strong><br />\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={exportFormat.json}\r\n                  onChange={e => setExportFormat(f => ({ ...f, json: e.target.checked }))}\r\n                /> JSON\r\n              </label>\r\n              <label style={{ marginLeft: 16 }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={exportFormat.xml}\r\n                  onChange={e => setExportFormat(f => ({ ...f, xml: e.target.checked }))}\r\n                /> XML\r\n              </label>\r\n            </div>\r\n            <div style={{ marginTop: 16 }}>\r\n              <button onClick={handleExport} disabled={!exportFormat.json && !exportFormat.xml}>Eksportuj</button>\r\n              <button onClick={() => setShowExport(false)} style={{ marginLeft: 8 }}>Anuluj</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div style={{ display: 'flex', gap: 20, justifyContent: 'center', alignItems: 'flex-start', margin: '2rem auto', width:'100%'}}>\r\n        <div style={{ flex: 1, minWidth: 500, maxWidth: 760, maxHeight: 625 }}>\r\n          <h3 className=\"chart-section-title\">Ceny mieszkań (wszystkie regiony, wybrany typ)</h3>\r\n           <div className=\"chart-section-select\">\r\n            <label>Typ mieszkania:&nbsp;\r\n              <select value={selectedType} onChange={e => setSelectedType(e.target.value)}>\r\n                {Object.entries(housingTypeNames).map(([typeId, name]) => (\r\n                  <option key={typeId} value={typeId}>{name}</option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n          <Line\r\n            data={housingChartData}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  position: 'top',\r\n                  labels: {\r\n                    boxWidth: 20,\r\n                    font: { size: 12 },\r\n                    padding: 10,\r\n                  }\r\n                }\r\n              },\r\n              elements: {\r\n                point: {\r\n                  radius: 2,\r\n                  borderWidth: 4,\r\n                  backgroundColor: '#fff',\r\n                }\r\n              },\r\n              scales: {\r\n                y: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Cena (PLN)'\r\n                  },\r\n                  ticks: {\r\n                    stepSize: 50000,\r\n                    callback: function (value) {\r\n                      return value.toLocaleString('pl-PL') + ' zł';\r\n                    }\r\n                  }\r\n                },\r\n                x: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Rok'\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n            height={400}\r\n            width={700}\r\n          />\r\n        </div>\r\n        <div style={{ flex: 1, minWidth: 500, maxWidth: 750, maxHeight: 510 }}>\r\n          <h3 className=\"chart-section-title\" style={{ paddingBottom: 146 }} >Stopa referencyjna NBP (historia)</h3>\r\n          <Line\r\n            data={nbpRefHistoryChartData}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  position: 'top',\r\n                  labels: {\r\n                    boxWidth: 20,\r\n                    font: { size: 12 },\r\n                    padding: 10,\r\n                  }\r\n                }\r\n              },\r\n              elements: {\r\n                point: {\r\n                  radius: 2,\r\n                  borderWidth: 4,\r\n                  backgroundColor: '#fff',\r\n                }\r\n              },\r\n            }}\r\n            height={500}\r\n            width={700}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: 'block',\r\n          width: '100%',\r\n          maxWidth: 1000,\r\n          margin: '10rem auto 2rem auto',\r\n          clear: 'both',\r\n        }}\r\n      >\r\n        <h3 className=\"chart-section-title\">Ceny mieszkań wg typu dla wybranego regionu</h3>\r\n        <div className=\"chart-section-select\">\r\n        <label>\r\n          Wybierz region:&nbsp;\r\n          <select\r\n            value={selectedRegionForTypes}\r\n            onChange={e => setSelectedRegionForTypes(e.target.value)}\r\n          >\r\n            {allRegionIds.map(regionId => (\r\n              <option key={regionId} value={regionId}>\r\n                {regionNames[regionId]}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        </div>\r\n        <Line\r\n          data={housingChartDataByType}\r\n          options={{\r\n            scales: {\r\n              y: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Cena (PLN)'\r\n                },\r\n                ticks: {\r\n                  stepSize: 50000,\r\n                  callback: function (value) {\r\n                    return value.toLocaleString('pl-PL') + ' zł';\r\n                  }\r\n                }\r\n              },\r\n              x: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Rok'\r\n                }\r\n              }\r\n            },\r\n            elements: {\r\n                point: {\r\n                  radius: 3,\r\n                  borderWidth: 5\r\n                }\r\n              }\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n  style={{\r\n    display: 'block',\r\n    width: '100%',\r\n    maxWidth: 1100,\r\n    margin: '4rem auto 1rem auto',\r\n    clear: 'both',\r\n  }}\r\n>\r\n  <h3 className=\"chart-section-title\">Średnia cena mieszkań (wszystkie regiony, wybrany typ) i stopy referencyjne NBP</h3>\r\n  <div className=\"chart-section-select\">\r\n    <label>\r\n      Typ mieszkania:&nbsp;\r\n      <select value={selectedBarType} onChange={e => setSelectedBarType(e.target.value)}>\r\n        {Object.entries(housingTypeNames).map(([typeId, name]) => (\r\n          <option key={typeId} value={typeId}>{name}</option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  </div>\r\n  <Bar\r\n    data={barChartData}\r\n    options={{\r\n      responsive: true,\r\n      plugins: {\r\n        legend: { position: 'top' },\r\n        tooltip: { mode: 'index', intersect: false }\r\n      },\r\n      elements: {\r\n        bar: {\r\n          barPercentage: 0.7, \r\n          categoryPercentage: 0.7\r\n        }\r\n      },\r\n      scales: {\r\n        y: {\r\n          type: 'linear',\r\n          position: 'left',\r\n          title: { display: true, text: 'Cena (PLN)' },\r\n          ticks: {\r\n            callback: value => value.toLocaleString('pl-PL') + ' zł',\r\n            beginAtZero: true\r\n          }\r\n        },\r\n        y1: {\r\n          type: 'linear',\r\n          position: 'right',\r\n          title: { display: true, text: 'Stopa referencyjna (%)' },\r\n          grid: { drawOnChartArea: false },\r\n          min: 0,\r\n          max: 8,\r\n        },\r\n        x: {\r\n          title: { display: true, text: 'Rok' }\r\n        }\r\n      }\r\n    }}\r\n    width={800}\r\n    height={400}\r\n  />\r\n</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,aAAa,EACbC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCb,OAAO,CAACc,QAAQ,CAACb,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAGC,UAAU,EACjFC,aAAa,EAACC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEvC,MAAMM,WAAW,GAAG;EAClB,cAAc,EAAE,2BAA2B;EAC3C,cAAc,EAAE,qBAAqB;EACrC,cAAc,EAAE,iBAAiB;EACjC,cAAc,EAAE,2BAA2B;EAC3C,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,4BAA4B;EAC5C,cAAc,EAAE,gBAAgB;EAChC,cAAc,EAAE,uBAAuB;EACvC,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,qBAAqB;EACrC,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,6BAA6B;EAC7C,cAAc,EAAE,8BAA8B;EAC9C,cAAc,EAAE,oBAAoB;EACpC,cAAc,EAAE,gBAAgB;EAChC,cAAc,EAAE,iBAAiB;EACjC,cAAc,EAAE;AAClB,CAAC;AACD,MAAMC,gBAAgB,GAAG;EACvB,QAAQ,EAAE,SAAS;EACnB,QAAQ,EAAE,oBAAoB;EAC9B,QAAQ,EAAE,iBAAiB;EAC3B,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACwB,GAAG,EAAEC,MAAM,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,QAAQ,CAAC;EAChE,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,QAAQ,CAAC;EAC1D,MAAM8B,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACd,WAAW,CAAC;EAC7C,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,MACnD+B,MAAM,CAACI,WAAW,CAACL,YAAY,CAACM,GAAG,CAACC,EAAE,IAAI,CAACA,EAAE,EAAE,IAAI,CAAC,CAAC,CACvD,CAAC;EACD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGzC,QAAQ,CAAC8B,YAAY,CAAC,CAAC,CAAC,CAAC;EACrF,MAAMY,QAAQ,GAAG7B,WAAW,CAAC,CAAC;EAE9B,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC+C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC,CAAC8B,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,CAAC+B,MAAM,CAACC,IAAI,CAACb,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClF,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACqD,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuD,YAAY,EAAEC,eAAe,CAAC,GAAGxD,QAAQ,CAAC;IAAEyD,IAAI,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAM,CAAC,CAAC;EAE5E,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCd,aAAa,CAACe,OAAO,CAACC,CAAC,IAAIH,MAAM,CAACI,MAAM,CAAC,SAAS,EAAED,CAAC,CAAC,CAAC;IACvDd,WAAW,CAACa,OAAO,CAACG,CAAC,IAAIL,MAAM,CAACI,MAAM,CAAC,OAAO,EAAEC,CAAC,CAAC,CAAC;IACnDL,MAAM,CAACI,MAAM,CAAC,UAAU,EAAEb,cAAc,CAAC;IACzCS,MAAM,CAACI,MAAM,CAAC,QAAQ,EAAEX,YAAY,CAAC;IACrC,IAAIE,YAAY,CAACE,IAAI,EAAEG,MAAM,CAACI,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;IACtD,IAAIT,YAAY,CAACG,GAAG,EAAEE,MAAM,CAACI,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC;IAEpD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoCP,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,EAAE;MAC/EC,OAAO,EAAE;QAAEC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MAAE;IACtE,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAI,CAAC,CAAC;IAC7B,MAAMC,kBAAkB,GAAGR,GAAG,CAACG,OAAO,CAACM,GAAG,CAAC,qBAAqB,CAAC;IACjE,IAAIC,QAAQ,GAAG,QAAQ;IACvB,IAAIF,kBAAkB,EAAE;MACtB,MAAMG,KAAK,GAAGH,kBAAkB,CAACG,KAAK,CAAC,sBAAsB,CAAC;MAC9D,IAAIA,KAAK,EAAED,QAAQ,GAAGC,KAAK,CAAC,CAAC,CAAC;IAChC;IACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;IAC5C,MAAMS,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGP,GAAG;IACZI,CAAC,CAACI,QAAQ,GAAGV,QAAQ;IACrBM,CAAC,CAACK,KAAK,CAAC,CAAC;IACTR,MAAM,CAACC,GAAG,CAACQ,eAAe,CAACV,GAAG,CAAC;IAC/BhC,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED/C,SAAS,CAAC,MAAM;IACd,MAAM0F,KAAK,GAAGlB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACiB,KAAK,EAAE;MACV/C,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEf3C,SAAS,CAAC,MAAM;IACf,MAAM0F,KAAK,GAAGlB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIiB,KAAK,EAAE;MACTtB,KAAK,CAAC,+BAA+B,EAAE;QACrCE,OAAO,EAAE;UAAEC,aAAa,EAAE,SAAS,GAAGmB;QAAM;MAC9C,CAAC,CAAC,CACCC,IAAI,CAACxB,GAAG,IAAIA,GAAG,CAACT,IAAI,CAAC,CAAC,CAAC,CACvBiC,IAAI,CAACpE,IAAI,IAAIsB,WAAW,CAACtB,IAAI,CAACqB,QAAQ,IAAI,EAAE,CAAC,CAAC,CAC9CgD,KAAK,CAAC,MAAM/C,WAAW,CAAC,EAAE,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEJ7C,SAAS,CAAC,MAAM;IACdoE,KAAK,CAAC,oCAAoC,CAAC,CACxCuB,IAAI,CAACxB,GAAG,IAAIA,GAAG,CAACT,IAAI,CAAC,CAAC,CAAC,CACvBiC,IAAI,CAACnE,OAAO,CAAC,CACboE,KAAK,CAAC,MAAMlE,MAAM,CAAC,kCAAkC,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN1B,SAAS,CAAC,MAAM;IACdoE,KAAK,CAAC,+CAA+C,CAAC,CACnDuB,IAAI,CAACxB,GAAG,IAAIA,GAAG,CAACT,IAAI,CAAC,CAAC,CAAC,CACvBiC,IAAI,CAACnD,mBAAmB,CAAC,CACzBoD,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAInE,GAAG,EAAE,oBAAOR,OAAA;IAAK4E,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,EAAEtE;EAAG;IAAAuE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACzD,IAAI,CAAC5E,IAAI,EAAE,oBAAON,OAAA;IAAA8E,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB5B,YAAY,CAAC6B,UAAU,CAAC,OAAO,CAAC;IAChC1D,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAM2D,wBAAwB,GAAG/D,gBAAgB,CAACgE,MAAM,CACtDvC,CAAC,IAAIwC,QAAQ,CAACxC,CAAC,CAACyC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,IAAID,QAAQ,CAACxC,CAAC,CAACyC,IAAI,EAAE,EAAE,CAAC,IAAI,IAC/D,CAAC;EAED,MAAMC,mBAAmB,GAAGJ,wBAAwB,CAACjE,GAAG,CAAC2B,CAAC,IAAIA,CAAC,CAACyC,IAAI,CAAC;EACrE,MAAME,mBAAmB,GAAGL,wBAAwB,CAACjE,GAAG,CAAC2B,CAAC,IAAIA,CAAC,CAAC4C,OAAO,CAAC;EAExE,MAAMC,sBAAsB,GAAG;IAC7BC,MAAM,EAAEJ,mBAAmB;IAC3BK,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,uCAAuC;MAC9CzF,IAAI,EAAEoF,mBAAmB;MACzBM,WAAW,EAAE,QAAQ;MACrBC,eAAe,EAAE,qBAAqB;MACtCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,eAAe,GAAG7F,IAAI,CAAC8F,OAAO,CAACxF,YAAY,CAAC,IAAI,EAAE;EACxD,MAAMkF,QAAQ,GAAGK,eAAe,CAC7Bb,MAAM,CAACe,MAAM,IAAIpF,cAAc,CAACoF,MAAM,CAACC,QAAQ,CAAC,CAAC,CACjDlF,GAAG,CAACiF,MAAM,IAAI;IAAA,IAAAE,YAAA;IACb,MAAMC,OAAO,GAAG,CAAC,EAAAD,YAAA,GAAAF,MAAM,CAAC/F,IAAI,cAAAiG,YAAA,uBAAXA,YAAA,CAAaC,OAAO,KAAI,EAAE,EAAElB,MAAM,CACjDvC,CAAC;MAAA,IAAA0D,UAAA;MAAA,OAAI,EAAAA,UAAA,GAAA1D,CAAC,CAAC2D,MAAM,CAAC,CAAC,CAAC,cAAAD,UAAA,uBAAXA,UAAA,CAAaE,GAAG,KAAI,IAAI,IAAI5D,CAAC,CAACyC,IAAI,IAAI,IAAI,IAAIzC,CAAC,CAACyC,IAAI,IAAI,IAAI;IAAA,CACnE,CAAC;IACD,OAAO;MACLO,KAAK,EAAE7F,WAAW,CAACmG,MAAM,CAACC,QAAQ,CAAC,IAAID,MAAM,CAACC,QAAQ;MACtDhG,IAAI,EAAEkG,OAAO,CAACpF,GAAG,CAAC2B,CAAC;QAAA,IAAA6D,WAAA;QAAA,QAAAA,WAAA,GAAI7D,CAAC,CAAC2D,MAAM,CAAC,CAAC,CAAC,cAAAE,WAAA,uBAAXA,WAAA,CAAaD,GAAG;MAAA,EAAC;MACxCX,WAAW,EAAE,GAAG,GAAG,CAAEa,IAAI,CAACC,GAAG,CAACT,MAAM,CAACC,QAAQ,CAACS,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC9C,CAAC,EAAE+C,CAAC,KAAK/C,CAAC,GAAG+C,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,GAAI,QAAQ,EAAE9D,QAAQ,CAAC,EAAE,CAAC,CAAC+D,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACtJlB,eAAe,EAAE,kBAAkB;MACnCC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC;EAEJ,MAAMkB,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,CAAC,IAAI,GAAGA,CAAC,EAAErE,QAAQ,CAAC,CAAC,CAAC;EAEzE,MAAMsE,gBAAgB,GAAG;IACvB7B,MAAM,EAAEuB,KAAK;IACbtB;EACF,CAAC;EAED,MAAM6B,UAAU,GAAG,CACjB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;EAED,MAAMC,cAAc,GAAG7G,MAAM,CAAC8G,OAAO,CAAC1H,gBAAgB,CAAC,CAACiB,GAAG,CAAC,CAAC,CAAC0G,MAAM,EAAEC,QAAQ,CAAC,EAAEC,GAAG,KAAK;IAAA,IAAAC,gBAAA;IACvF,MAAMC,UAAU,GAAG,CAAC5H,IAAI,CAAC8F,OAAO,CAAC0B,MAAM,CAAC,IAAI,EAAE,EAAEK,IAAI,CAACpF,CAAC,IAAIA,CAAC,CAACuD,QAAQ,KAAK9E,sBAAsB,CAAC;IAChG,MAAMgF,OAAO,GAAG,CAAC,CAAA0B,UAAU,aAAVA,UAAU,wBAAAD,gBAAA,GAAVC,UAAU,CAAE5H,IAAI,cAAA2H,gBAAA,uBAAhBA,gBAAA,CAAkBzB,OAAO,KAAI,EAAE,EAAElB,MAAM,CACtDvC,CAAC;MAAA,IAAAqF,WAAA;MAAA,OAAI,EAAAA,WAAA,GAAArF,CAAC,CAAC2D,MAAM,CAAC,CAAC,CAAC,cAAA0B,WAAA,uBAAXA,WAAA,CAAazB,GAAG,KAAI,IAAI,IAAI5D,CAAC,CAACyC,IAAI,IAAI,IAAI,IAAIzC,CAAC,CAACyC,IAAI,IAAI,IAAI;IAAA,CACnE,CAAC;IACD,OAAO;MACLO,KAAK,EAAEgC,QAAQ;MACfzH,IAAI,EAAEkG,OAAO,CAACpF,GAAG,CAAC2B,CAAC;QAAA,IAAAsF,WAAA;QAAA,QAAAA,WAAA,GAAItF,CAAC,CAAC2D,MAAM,CAAC,CAAC,CAAC,cAAA2B,WAAA,uBAAXA,WAAA,CAAa1B,GAAG;MAAA,EAAC;MACxCX,WAAW,EAAE2B,UAAU,CAACK,GAAG,CAAC;MAC5B/B,eAAe,EAAE0B,UAAU,CAACK,GAAG,CAAC,GAAG,IAAI;MACvC9B,OAAO,EAAE,GAAG;MACZoC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE;IACf,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,sBAAsB,GAAG;IAC7B3C,MAAM,EAAEuB,KAAK;IACbtB,QAAQ,EAAE8B;EACZ,CAAC;EAED,MAAMa,kBAAkB,GAAGnI,IAAI,CAAC8F,OAAO,CAAC1F,eAAe,CAAC,IAAI,EAAE;EAC9D,MAAMgI,eAAe,GAAGtB,KAAK,CAAChG,GAAG,CAACoE,IAAI,IAAI;IACxC,MAAMkB,MAAM,GAAG+B,kBAAkB,CAC9BrH,GAAG,CAACiF,MAAM;MAAA,IAAAsC,KAAA,EAAAC,aAAA,EAAAC,aAAA;MAAA,QAAAF,KAAA,GACT,CAAC,EAAAE,aAAA,GAAAxC,MAAM,CAAC/F,IAAI,cAAAuI,aAAA,uBAAXA,aAAA,CAAarC,OAAO,KAAI,EAAE,EAAE2B,IAAI,CAACpF,CAAC,IAAIA,CAAC,CAACyC,IAAI,KAAKD,QAAQ,CAACC,IAAI,CAAC,CAAC,cAAAmD,KAAA,wBAAAC,aAAA,GAAjED,KAAA,CAAmEjC,MAAM,CAAC,CAAC,CAAC,cAAAkC,aAAA,uBAA5EA,aAAA,CAA8EjC,GAAG;IAAA,CACnF,CAAC,CACArB,MAAM,CAACwD,CAAC,IAAIA,CAAC,IAAI,IAAI,CAAC;IACzB,IAAIpC,MAAM,CAACa,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IACpC,OAAOb,MAAM,CAACM,MAAM,CAAC,CAAC9C,CAAC,EAAE6E,CAAC,KAAK7E,CAAC,GAAG6E,CAAC,EAAE,CAAC,CAAC,GAAGrC,MAAM,CAACa,MAAM;EAC1D,CAAC,CAAC;EAEF,MAAMyB,cAAc,GAAG5B,KAAK,CAAChG,GAAG,CAACoE,IAAI;IAAA,IAAAyD,qBAAA,EAAAC,sBAAA;IAAA,QAAAD,qBAAA,IAAAC,sBAAA,GACnC7D,wBAAwB,CAAC8C,IAAI,CAACpF,CAAC,IAAIA,CAAC,CAACyC,IAAI,KAAKD,QAAQ,CAACC,IAAI,CAAC,CAAC,cAAA0D,sBAAA,uBAA7DA,sBAAA,CAA+DvD,OAAO,cAAAsD,qBAAA,cAAAA,qBAAA,GAAI,IAAI;EAAA,CAChF,CAAC;EAED,MAAME,YAAY,GAAG;IACnBtD,MAAM,EAAEuB,KAAK;IACbtB,QAAQ,EAAE,CACR;MACEsD,IAAI,EAAE,KAAK;MACXrD,KAAK,EAAE,6BAA6B;MACpCzF,IAAI,EAAEoI,eAAe;MACrBzC,eAAe,EAAE,SAAS;MAC1BoD,OAAO,EAAE,GAAG;MACZC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,IAAI,EAAE,MAAM;MACZrD,KAAK,EAAE,4BAA4B;MACnCzF,IAAI,EAAE0I,cAAc;MACpBhD,WAAW,EAAE,QAAQ;MACrBC,eAAe,EAAE,sBAAsB;MACvCoD,OAAO,EAAE,IAAI;MACbnD,OAAO,EAAE,GAAG;MACZqC,WAAW,EAAE,CAAC;MACdD,WAAW,EAAE,CAAC;MACdgB,KAAK,EAAE;IACT,CAAC;EAEL,CAAC;EAED,oBACEtJ,OAAA;IAAK4E,KAAK,EAAE;MAAE2E,KAAK,EAAC,MAAM;MAAEC,MAAM,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAM,CAAE;IAAA3E,QAAA,gBAC7D9E,OAAA;MAAK0J,SAAS,EAAC,kBAAkB;MAAA5E,QAAA,gBAC/B9E,OAAA;QAAK0J,SAAS,EAAC,uBAAuB;QAAA5E,QAAA,gBACpC9E,OAAA;UAAM0J,SAAS,EAAC,mBAAmB;UAAA5E,QAAA,GAAC,OAC7B,EAACnD,QAAQ,GAAG,KAAKA,QAAQ,GAAG,GAAG,GAAG;QAAA;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACPlF,OAAA;UAAQ0J,SAAS,EAAC,sBAAsB;UAACC,OAAO,EAAEA,CAAA,KAAM7H,aAAa,CAAC,IAAI,CAAE;UAAAgD,QAAA,EAAC;QAE7E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNlF,OAAA;QAAQ0J,SAAS,EAAC,sBAAsB;QAACC,OAAO,EAAExE,YAAa;QAAAL,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLrD,UAAU,iBACT7B,OAAA;MAAK4E,KAAK,EAAE;QACVgF,QAAQ,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAEP,KAAK,EAAE,OAAO;QAAEQ,MAAM,EAAE,OAAO;QACnEC,UAAU,EAAE,iBAAiB;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAC1G,CAAE;MAAAtF,QAAA,eACA9E,OAAA;QAAK0J,SAAS,EAAC,8BAA8B;QAAA5E,QAAA,gBAC3C9E,OAAA;UAAA8E,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBlF,OAAA;UAAK0J,SAAS,EAAC,sBAAsB;UAAA5E,QAAA,gBACnC9E,OAAA;YAAA8E,QAAA,gBACE9E,OAAA;cAAA8E,QAAA,EAAQ;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACzBlF,OAAA;cAAK0J,SAAS,EAAC,qBAAqB;cAAA5E,QAAA,EACjChE,YAAY,CAACM,GAAG,CAACkF,QAAQ,iBACxBtG,OAAA;gBAAA8E,QAAA,gBACE9E,OAAA;kBACEoJ,IAAI,EAAC,UAAU;kBACfiB,OAAO,EAAEtI,aAAa,CAACuI,QAAQ,CAAChE,QAAQ,CAAE;kBAC1CiE,QAAQ,EAAEC,CAAC,IAAI;oBACbxI,gBAAgB,CAACyI,OAAO,IACtBD,CAAC,CAACE,MAAM,CAACL,OAAO,GACZ,CAAC,GAAGI,OAAO,EAAEnE,QAAQ,CAAC,GACtBmE,OAAO,CAACnF,MAAM,CAACvC,CAAC,IAAIA,CAAC,KAAKuD,QAAQ,CACxC,CAAC;kBACH;gBAAE;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,EACDhF,WAAW,CAACoG,QAAQ,CAAC;cAAA,GAZZA,QAAQ;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAab,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNlF,OAAA;YAAA8E,QAAA,gBACE9E,OAAA;cAAA8E,QAAA,EAAQ;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC/BlF,OAAA;cAAK0J,SAAS,EAAC,mBAAmB;cAAA5E,QAAA,EAC/B/D,MAAM,CAAC8G,OAAO,CAAC1H,gBAAgB,CAAC,CAACiB,GAAG,CAAC,CAAC,CAAC0G,MAAM,EAAE6C,IAAI,CAAC,kBACnD3K,OAAA;gBAAA8E,QAAA,gBACE9E,OAAA;kBACEoJ,IAAI,EAAC,UAAU;kBACfiB,OAAO,EAAEpI,WAAW,CAACqI,QAAQ,CAACxC,MAAM,CAAE;kBACtCyC,QAAQ,EAAEC,CAAC,IAAI;oBACbtI,cAAc,CAAC0I,KAAK,IAClBJ,CAAC,CAACE,MAAM,CAACL,OAAO,GACZ,CAAC,GAAGO,KAAK,EAAE9C,MAAM,CAAC,GAClB8C,KAAK,CAACtF,MAAM,CAACrC,CAAC,IAAIA,CAAC,KAAK6E,MAAM,CACpC,CAAC;kBACH;gBAAE;kBAAA/C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,EACDyF,IAAI;cAAA,GAZK7C,MAAM;gBAAA/C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAaX,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNlF,OAAA;UAAA8E,QAAA,gBACE9E,OAAA;YAAA8E,QAAA,EAAQ;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAAAlF,OAAA;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClClF,OAAA;YACEoJ,IAAI,EAAC,QAAQ;YACbyB,GAAG,EAAC,MAAM;YACVC,GAAG,EAAC,MAAM;YACVC,KAAK,EAAE5I,cAAe;YACtBoI,QAAQ,EAAEC,CAAC,IAAIpI,iBAAiB,CAAC4I,MAAM,CAACR,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CAAE;YACzDnG,KAAK,EAAE;cAAE2E,KAAK,EAAE;YAAG;UAAE;YAAAxE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,EAAC,GAAG,EAAC,IACL,EAAC,GAAG,eACNlF,OAAA;YACEoJ,IAAI,EAAC,QAAQ;YACbyB,GAAG,EAAC,MAAM;YACVC,GAAG,EAAC,MAAM;YACVC,KAAK,EAAE1I,YAAa;YACpBkI,QAAQ,EAAEC,CAAC,IAAIlI,eAAe,CAAC0I,MAAM,CAACR,CAAC,CAACE,MAAM,CAACK,KAAK,CAAC,CAAE;YACvDnG,KAAK,EAAE;cAAE2E,KAAK,EAAE;YAAG;UAAE;YAAAxE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNlF,OAAA;UAAA8E,QAAA,gBACE9E,OAAA;YAAA8E,QAAA,EAAQ;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAAAlF,OAAA;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvClF,OAAA;YAAA8E,QAAA,gBACE9E,OAAA;cACEoJ,IAAI,EAAC,UAAU;cACfiB,OAAO,EAAE9H,YAAY,CAACE,IAAK;cAC3B8H,QAAQ,EAAEC,CAAC,IAAIhI,eAAe,CAACyI,CAAC,KAAK;gBAAE,GAAGA,CAAC;gBAAExI,IAAI,EAAE+H,CAAC,CAACE,MAAM,CAACL;cAAQ,CAAC,CAAC;YAAE;cAAAtF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzE,CAAC,SACJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRlF,OAAA;YAAO4E,KAAK,EAAE;cAAEsG,UAAU,EAAE;YAAG,CAAE;YAAApG,QAAA,gBAC/B9E,OAAA;cACEoJ,IAAI,EAAC,UAAU;cACfiB,OAAO,EAAE9H,YAAY,CAACG,GAAI;cAC1B6H,QAAQ,EAAEC,CAAC,IAAIhI,eAAe,CAACyI,CAAC,KAAK;gBAAE,GAAGA,CAAC;gBAAEvI,GAAG,EAAE8H,CAAC,CAACE,MAAM,CAACL;cAAQ,CAAC,CAAC;YAAE;cAAAtF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE,CAAC,QACJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNlF,OAAA;UAAK4E,KAAK,EAAE;YAAEuG,SAAS,EAAE;UAAG,CAAE;UAAArG,QAAA,gBAC5B9E,OAAA;YAAQ2J,OAAO,EAAEhH,YAAa;YAACyI,QAAQ,EAAE,CAAC7I,YAAY,CAACE,IAAI,IAAI,CAACF,YAAY,CAACG,GAAI;YAAAoC,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpGlF,OAAA;YAAQ2J,OAAO,EAAEA,CAAA,KAAM7H,aAAa,CAAC,KAAK,CAAE;YAAC8C,KAAK,EAAE;cAAEsG,UAAU,EAAE;YAAE,CAAE;YAAApG,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eACDlF,OAAA;MAAK4E,KAAK,EAAE;QAAEqF,OAAO,EAAE,MAAM;QAAEoB,GAAG,EAAE,EAAE;QAAElB,cAAc,EAAE,QAAQ;QAAED,UAAU,EAAE,YAAY;QAAEV,MAAM,EAAE,WAAW;QAAED,KAAK,EAAC;MAAM,CAAE;MAAAzE,QAAA,gBAC7H9E,OAAA;QAAK4E,KAAK,EAAE;UAAE0G,IAAI,EAAE,CAAC;UAAEC,QAAQ,EAAE,GAAG;UAAEC,QAAQ,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAI,CAAE;QAAA3G,QAAA,gBACpE9E,OAAA;UAAI0J,SAAS,EAAC,qBAAqB;UAAA5E,QAAA,EAAC;QAA8C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtFlF,OAAA;UAAK0J,SAAS,EAAC,sBAAsB;UAAA5E,QAAA,eACpC9E,OAAA;YAAA8E,QAAA,GAAO,qBACL,eAAA9E,OAAA;cAAQ+K,KAAK,EAAEnK,YAAa;cAAC2J,QAAQ,EAAEC,CAAC,IAAI3J,eAAe,CAAC2J,CAAC,CAACE,MAAM,CAACK,KAAK,CAAE;cAAAjG,QAAA,EACzE/D,MAAM,CAAC8G,OAAO,CAAC1H,gBAAgB,CAAC,CAACiB,GAAG,CAAC,CAAC,CAAC0G,MAAM,EAAE6C,IAAI,CAAC,kBACnD3K,OAAA;gBAAqB+K,KAAK,EAAEjD,MAAO;gBAAAhD,QAAA,EAAE6F;cAAI,GAA5B7C,MAAM;gBAAA/C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA+B,CACnD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNlF,OAAA,CAACf,IAAI;UACHqB,IAAI,EAAEoH,gBAAiB;UACvBgE,OAAO,EAAE;YACPC,mBAAmB,EAAE,KAAK;YAC1BC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNjC,QAAQ,EAAE,KAAK;gBACf/D,MAAM,EAAE;kBACNiG,QAAQ,EAAE,EAAE;kBACZC,IAAI,EAAE;oBAAEC,IAAI,EAAE;kBAAG,CAAC;kBAClBvC,OAAO,EAAE;gBACX;cACF;YACF,CAAC;YACDwC,QAAQ,EAAE;cACRC,KAAK,EAAE;gBACLC,MAAM,EAAE,CAAC;gBACT7D,WAAW,EAAE,CAAC;gBACdrC,eAAe,EAAE;cACnB;YACF,CAAC;YACDmG,MAAM,EAAE;cACNC,CAAC,EAAE;gBACDC,KAAK,EAAE;kBACLrC,OAAO,EAAE,IAAI;kBACbsC,IAAI,EAAE;gBACR,CAAC;gBACDC,KAAK,EAAE;kBACLC,QAAQ,EAAE,KAAK;kBACfC,QAAQ,EAAE,SAAAA,CAAU3B,KAAK,EAAE;oBACzB,OAAOA,KAAK,CAAC4B,cAAc,CAAC,OAAO,CAAC,GAAG,KAAK;kBAC9C;gBACF;cACF,CAAC;cACDC,CAAC,EAAE;gBACDN,KAAK,EAAE;kBACLrC,OAAO,EAAE,IAAI;kBACbsC,IAAI,EAAE;gBACR;cACF;YACF;UACF,CAAE;UACFxC,MAAM,EAAE,GAAI;UACZR,KAAK,EAAE;QAAI;UAAAxE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlF,OAAA;QAAK4E,KAAK,EAAE;UAAE0G,IAAI,EAAE,CAAC;UAAEC,QAAQ,EAAE,GAAG;UAAEC,QAAQ,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAI,CAAE;QAAA3G,QAAA,gBACpE9E,OAAA;UAAI0J,SAAS,EAAC,qBAAqB;UAAC9E,KAAK,EAAE;YAAEiI,aAAa,EAAE;UAAI,CAAE;UAAA/H,QAAA,EAAE;QAAiC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1GlF,OAAA,CAACf,IAAI;UACHqB,IAAI,EAAEsF,sBAAuB;UAC7B8F,OAAO,EAAE;YACPC,mBAAmB,EAAE,KAAK;YAC1BC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNjC,QAAQ,EAAE,KAAK;gBACf/D,MAAM,EAAE;kBACNiG,QAAQ,EAAE,EAAE;kBACZC,IAAI,EAAE;oBAAEC,IAAI,EAAE;kBAAG,CAAC;kBAClBvC,OAAO,EAAE;gBACX;cACF;YACF,CAAC;YACDwC,QAAQ,EAAE;cACRC,KAAK,EAAE;gBACLC,MAAM,EAAE,CAAC;gBACT7D,WAAW,EAAE,CAAC;gBACdrC,eAAe,EAAE;cACnB;YACF;UACF,CAAE;UACF8D,MAAM,EAAE,GAAI;UACZR,KAAK,EAAE;QAAI;UAAAxE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNlF,OAAA;MACE4E,KAAK,EAAE;QACLqF,OAAO,EAAE,OAAO;QAChBV,KAAK,EAAE,MAAM;QACbiC,QAAQ,EAAE,IAAI;QACdhC,MAAM,EAAE,sBAAsB;QAC9BsD,KAAK,EAAE;MACT,CAAE;MAAAhI,QAAA,gBAEF9E,OAAA;QAAI0J,SAAS,EAAC,qBAAqB;QAAA5E,QAAA,EAAC;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpFlF,OAAA;QAAK0J,SAAS,EAAC,sBAAsB;QAAA5E,QAAA,eACrC9E,OAAA;UAAA8E,QAAA,GAAO,qBAEL,eAAA9E,OAAA;YACE+K,KAAK,EAAEvJ,sBAAuB;YAC9B+I,QAAQ,EAAEC,CAAC,IAAI/I,yBAAyB,CAAC+I,CAAC,CAACE,MAAM,CAACK,KAAK,CAAE;YAAAjG,QAAA,EAExDhE,YAAY,CAACM,GAAG,CAACkF,QAAQ,iBACxBtG,OAAA;cAAuB+K,KAAK,EAAEzE,QAAS;cAAAxB,QAAA,EACpC5E,WAAW,CAACoG,QAAQ;YAAC,GADXA,QAAQ;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNlF,OAAA,CAACf,IAAI;QACHqB,IAAI,EAAEkI,sBAAuB;QAC7BkD,OAAO,EAAE;UACPU,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,KAAK,EAAE;gBACLrC,OAAO,EAAE,IAAI;gBACbsC,IAAI,EAAE;cACR,CAAC;cACDC,KAAK,EAAE;gBACLC,QAAQ,EAAE,KAAK;gBACfC,QAAQ,EAAE,SAAAA,CAAU3B,KAAK,EAAE;kBACzB,OAAOA,KAAK,CAAC4B,cAAc,CAAC,OAAO,CAAC,GAAG,KAAK;gBAC9C;cACF;YACF,CAAC;YACDC,CAAC,EAAE;cACDN,KAAK,EAAE;gBACLrC,OAAO,EAAE,IAAI;gBACbsC,IAAI,EAAE;cACR;YACF;UACF,CAAC;UACDN,QAAQ,EAAE;YACNC,KAAK,EAAE;cACLC,MAAM,EAAE,CAAC;cACT7D,WAAW,EAAE;YACf;UACF;QACJ;MAAE;QAAAvD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlF,OAAA;MACJ4E,KAAK,EAAE;QACLqF,OAAO,EAAE,OAAO;QAChBV,KAAK,EAAE,MAAM;QACbiC,QAAQ,EAAE,IAAI;QACdhC,MAAM,EAAE,qBAAqB;QAC7BsD,KAAK,EAAE;MACT,CAAE;MAAAhI,QAAA,gBAEF9E,OAAA;QAAI0J,SAAS,EAAC,qBAAqB;QAAA5E,QAAA,EAAC;MAA+E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxHlF,OAAA;QAAK0J,SAAS,EAAC,sBAAsB;QAAA5E,QAAA,eACnC9E,OAAA;UAAA8E,QAAA,GAAO,qBAEL,eAAA9E,OAAA;YAAQ+K,KAAK,EAAErK,eAAgB;YAAC6J,QAAQ,EAAEC,CAAC,IAAI7J,kBAAkB,CAAC6J,CAAC,CAACE,MAAM,CAACK,KAAK,CAAE;YAAAjG,QAAA,EAC/E/D,MAAM,CAAC8G,OAAO,CAAC1H,gBAAgB,CAAC,CAACiB,GAAG,CAAC,CAAC,CAAC0G,MAAM,EAAE6C,IAAI,CAAC,kBACnD3K,OAAA;cAAqB+K,KAAK,EAAEjD,MAAO;cAAAhD,QAAA,EAAE6F;YAAI,GAA5B7C,MAAM;cAAA/C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+B,CACnD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNlF,OAAA,CAACF,GAAG;QACFQ,IAAI,EAAE6I,YAAa;QACnBuC,OAAO,EAAE;UACPqB,UAAU,EAAE,IAAI;UAChBnB,OAAO,EAAE;YACPC,MAAM,EAAE;cAAEjC,QAAQ,EAAE;YAAM,CAAC;YAC3BoD,OAAO,EAAE;cAAEC,IAAI,EAAE,OAAO;cAAEC,SAAS,EAAE;YAAM;UAC7C,CAAC;UACDjB,QAAQ,EAAE;YACRkB,GAAG,EAAE;cACHC,aAAa,EAAE,GAAG;cAClBC,kBAAkB,EAAE;YACtB;UACF,CAAC;UACDjB,MAAM,EAAE;YACNC,CAAC,EAAE;cACDjD,IAAI,EAAE,QAAQ;cACdQ,QAAQ,EAAE,MAAM;cAChB0C,KAAK,EAAE;gBAAErC,OAAO,EAAE,IAAI;gBAAEsC,IAAI,EAAE;cAAa,CAAC;cAC5CC,KAAK,EAAE;gBACLE,QAAQ,EAAE3B,KAAK,IAAIA,KAAK,CAAC4B,cAAc,CAAC,OAAO,CAAC,GAAG,KAAK;gBACxDW,WAAW,EAAE;cACf;YACF,CAAC;YACDC,EAAE,EAAE;cACFnE,IAAI,EAAE,QAAQ;cACdQ,QAAQ,EAAE,OAAO;cACjB0C,KAAK,EAAE;gBAAErC,OAAO,EAAE,IAAI;gBAAEsC,IAAI,EAAE;cAAyB,CAAC;cACxDiB,IAAI,EAAE;gBAAEC,eAAe,EAAE;cAAM,CAAC;cAChC5C,GAAG,EAAE,CAAC;cACNC,GAAG,EAAE;YACP,CAAC;YACD8B,CAAC,EAAE;cACDN,KAAK,EAAE;gBAAErC,OAAO,EAAE,IAAI;gBAAEsC,IAAI,EAAE;cAAM;YACtC;UACF;QACF,CAAE;QACFhD,KAAK,EAAE,GAAI;QACXQ,MAAM,EAAE;MAAI;QAAAhF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEV,CAAC;AAAC7E,EAAA,CAxgBID,SAAS;EAAA,QAWIP,WAAW;AAAA;AAAA6N,EAAA,GAXxBtN,SAAS;AA0gBf,eAAeA,SAAS;AAAC,IAAAsN,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}