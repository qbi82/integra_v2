{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qbi82\\\\Desktop\\\\integrale\\\\integra_v2\\\\integra_v2\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE'\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2 do 100m2'\n};\nconst Dashboard = () => {\n  _s();\n  var _housingRegion$data, _housingRegion$data$r, _interest$find, _interest$find$data, _interest$find$data$r;\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('060610000000');\n  const [selectedType, setSelectedType] = useState('633663'); // domyślny typ\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data').then(res => res.json()).then(setData).catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n  if (err) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: err\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 19\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 21\n  }, this);\n\n  // Pobierz dane dla wybranego typu mieszkania i stopy procentowej\n  const housingTypeData = data.housing[selectedType] || [];\n  const interest = data.interest;\n\n  // Filtruj dane dla wybranego regionu\n  const housingRegion = housingTypeData.find(r => r.regionId === selectedRegion);\n  const housingResults = (housingRegion === null || housingRegion === void 0 ? void 0 : (_housingRegion$data = housingRegion.data) === null || _housingRegion$data === void 0 ? void 0 : (_housingRegion$data$r = _housingRegion$data.results) === null || _housingRegion$data$r === void 0 ? void 0 : _housingRegion$data$r.filter(r => {\n    var _r$values$;\n    return ((_r$values$ = r.values[0]) === null || _r$values$ === void 0 ? void 0 : _r$values$.val) != null;\n  })) || [];\n  const interestResults = (interest === null || interest === void 0 ? void 0 : (_interest$find = interest.find(r => r.regionId === selectedRegion)) === null || _interest$find === void 0 ? void 0 : (_interest$find$data = _interest$find.data) === null || _interest$find$data === void 0 ? void 0 : (_interest$find$data$r = _interest$find$data.results) === null || _interest$find$data$r === void 0 ? void 0 : _interest$find$data$r.filter(r => {\n    var _r$values$2;\n    return ((_r$values$2 = r.values[0]) === null || _r$values$2 === void 0 ? void 0 : _r$values$2.val) != null;\n  })) || [];\n  const years = housingResults.map(r => r.year);\n  const housingValues = housingResults.map(r => {\n    var _r$values$3;\n    return (_r$values$3 = r.values[0]) === null || _r$values$3 === void 0 ? void 0 : _r$values$3.val;\n  });\n  const interestYears = interestResults.map(r => r.year);\n  const interestValues = interestResults.map(r => {\n    var _r$values$4;\n    return (_r$values$4 = r.values[0]) === null || _r$values$4 === void 0 ? void 0 : _r$values$4.val;\n  });\n  const housingChartData = {\n    labels: years,\n    datasets: [{\n      label: `Ceny mieszkań (${regionNames[selectedRegion]})`,\n      data: housingValues,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0,0,255,0.1)'\n    }]\n  };\n  const interestChartData = {\n    labels: interestYears,\n    datasets: [{\n      label: 'Stopy procentowe (Polska)',\n      data: interestValues,\n      borderColor: 'green',\n      backgroundColor: 'rgba(0,255,0,0.1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel u\\u017Cytkownika\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeste\\u015B zalogowany!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dane z BDL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Wybierz region:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRegion,\n          onChange: e => setSelectedRegion(e.target.value),\n          children: Object.keys(regionNames).map(regionId => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: regionId,\n            children: regionNames[regionId]\n          }, regionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 16\n        },\n        children: [\"Typ mieszkania:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedType,\n          onChange: e => setSelectedType(e.target.value),\n          children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: typeId,\n            children: name\n          }, typeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"IJXXYk7nyNJLxyPxBS4GcWT+WvU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","regionNames","housingTypeNames","Dashboard","_s","_housingRegion$data","_housingRegion$data$r","_interest$find","_interest$find$data","_interest$find$data$r","data","setData","err","setErr","selectedRegion","setSelectedRegion","selectedType","setSelectedType","fetch","then","res","json","catch","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","housingTypeData","housing","interest","housingRegion","find","r","regionId","housingResults","results","filter","_r$values$","values","val","interestResults","_r$values$2","years","map","year","housingValues","_r$values$3","interestYears","interestValues","_r$values$4","housingChartData","labels","datasets","label","borderColor","backgroundColor","interestChartData","value","onChange","e","target","Object","keys","marginLeft","entries","typeId","name","_c","$RefreshReg$"],"sources":["C:/Users/qbi82/Desktop/integrale/integra_v2/integra_v2/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst regionNames = {\r\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\r\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\r\n  '031610000000': 'REGION OPOLSKIE',\r\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\r\n  '042210000000': 'REGION POMORSKIE',\r\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\r\n  '051010000000': 'REGION ŁÓDZKIE',\r\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\r\n  '060610000000': 'REGION LUBELSKIE',\r\n  '061810000000': 'REGION PODKARPACKIE',\r\n  '062010000000': 'REGION PODLASKIE',\r\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\r\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\r\n  '011210000000': 'REGION MAŁOPOLSKIE',\r\n  '012410000000': 'REGION ŚLĄSKIE',\r\n  '020810000000': 'REGION LUBUSKIE',\r\n  '023010000000': 'REGION WIELKOPOLSKIE',\r\n};\r\nconst housingTypeNames = {\r\n  '633663': 'do 40m2',\r\n  '633664': 'od 40.1 m2 do 60m2',\r\n  '633665': 'od 60m2 do 80m2',\r\n  '633666': 'od 80m2 do 100m2',\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState(null);\r\n  const [err, setErr] = useState('');\r\n  const [selectedRegion, setSelectedRegion] = useState('060610000000');\r\n  const [selectedType, setSelectedType] = useState('633663'); // domyślny typ\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/api/bdl-data')\r\n      .then(res => res.json())\r\n      .then(setData)\r\n      .catch(() => setErr('Błąd pobierania danych z serwera'));\r\n  }, []);\r\n\r\n  if (err) return <div style={{ color: 'red' }}>{err}</div>;\r\n  if (!data) return <div>Ładowanie danych...</div>;\r\n\r\n  // Pobierz dane dla wybranego typu mieszkania i stopy procentowej\r\n  const housingTypeData = data.housing[selectedType] || [];\r\n  const interest = data.interest;\r\n\r\n  // Filtruj dane dla wybranego regionu\r\n  const housingRegion = housingTypeData.find(r => r.regionId === selectedRegion);\r\n  const housingResults = housingRegion?.data?.results?.filter(r => r.values[0]?.val != null) || [];\r\n  const interestResults = interest?.find(r => r.regionId === selectedRegion)?.data?.results?.filter(r => r.values[0]?.val != null) || [];\r\n\r\n  const years = housingResults.map(r => r.year);\r\n  const housingValues = housingResults.map(r => r.values[0]?.val);\r\n  const interestYears = interestResults.map(r => r.year);\r\n  const interestValues = interestResults.map(r => r.values[0]?.val);\r\n\r\n  const housingChartData = {\r\n    labels: years,\r\n    datasets: [\r\n      {\r\n        label: `Ceny mieszkań (${regionNames[selectedRegion]})`,\r\n        data: housingValues,\r\n        borderColor: 'blue',\r\n        backgroundColor: 'rgba(0,0,255,0.1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const interestChartData = {\r\n    labels: interestYears,\r\n    datasets: [\r\n      {\r\n        label: 'Stopy procentowe (Polska)',\r\n        data: interestValues,\r\n        borderColor: 'green',\r\n        backgroundColor: 'rgba(0,255,0,0.1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Panel użytkownika</h1>\r\n      <p>Jesteś zalogowany!</p>\r\n      <h2>Dane z BDL</h2>\r\n      <div>\r\n        <label>Wybierz region:&nbsp;\r\n          <select value={selectedRegion} onChange={e => setSelectedRegion(e.target.value)}>\r\n            {Object.keys(regionNames).map(regionId => (\r\n              <option key={regionId} value={regionId}>\r\n                {regionNames[regionId]}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label style={{ marginLeft: 16 }}>Typ mieszkania:&nbsp;\r\n          <select value={selectedType} onChange={e => setSelectedType(e.target.value)}>\r\n            {Object.entries(housingTypeNames).map(([typeId, name]) => (\r\n              <option key={typeId} value={typeId}>{name}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      {/* ...wykresy jak było... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}