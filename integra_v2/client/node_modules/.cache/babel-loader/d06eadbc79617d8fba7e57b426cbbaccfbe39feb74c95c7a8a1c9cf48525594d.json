{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY'\n};\nconst Dashboard = () => {\n  _s();\n  var _housingRegion$data, _housingRegion$data$r, _interest$data, _interest$data$result;\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('060000000000');\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data').then(res => res.json()).then(setData).catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n  if (err) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: err\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 19\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n\n  // Filtruj dane dla wybranego regionu\n  const housingRegion = data.housing.find(r => r.regionId === selectedRegion);\n  const interest = data.interest[1]; // Polska ogółem\n\n  // Przygotuj dane do wykresów, filtrując tylko te z wartościami liczbowymi\n  const housingResults = (housingRegion === null || housingRegion === void 0 ? void 0 : (_housingRegion$data = housingRegion.data) === null || _housingRegion$data === void 0 ? void 0 : (_housingRegion$data$r = _housingRegion$data.results) === null || _housingRegion$data$r === void 0 ? void 0 : _housingRegion$data$r.filter(r => {\n    var _r$values$;\n    return ((_r$values$ = r.values[0]) === null || _r$values$ === void 0 ? void 0 : _r$values$.val) != null;\n  })) || [];\n  const interestResults = (interest === null || interest === void 0 ? void 0 : (_interest$data = interest.data) === null || _interest$data === void 0 ? void 0 : (_interest$data$result = _interest$data.results) === null || _interest$data$result === void 0 ? void 0 : _interest$data$result.filter(r => {\n    var _r$values$2;\n    return ((_r$values$2 = r.values[0]) === null || _r$values$2 === void 0 ? void 0 : _r$values$2.val) != null;\n  })) || [];\n  const years = housingResults.map(r => r.year);\n  const housingValues = housingResults.map(r => {\n    var _r$values$3;\n    return (_r$values$3 = r.values[0]) === null || _r$values$3 === void 0 ? void 0 : _r$values$3.val;\n  });\n  const interestYears = interestResults.map(r => r.year);\n  const interestValues = interestResults.map(r => {\n    var _r$values$4;\n    return (_r$values$4 = r.values[0]) === null || _r$values$4 === void 0 ? void 0 : _r$values$4.val;\n  });\n  const housingChartData = {\n    labels: years,\n    datasets: [{\n      label: `Ceny mieszkań (${regionNames[selectedRegion]})`,\n      data: housingValues,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0,0,255,0.1)'\n    }]\n  };\n  const interestChartData = {\n    labels: interestYears,\n    datasets: [{\n      label: 'Stopy procentowe (Polska)',\n      data: interestValues,\n      borderColor: 'green',\n      backgroundColor: 'rgba(0,255,0,0.1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel u\\u017Cytkownika\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeste\\u015B zalogowany!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dane z BDL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Wybierz region:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRegion,\n          onChange: e => setSelectedRegion(e.target.value),\n          children: data.housing.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: r.regionId,\n            children: regionNames[r.regionId] || r.regionId\n          }, r.regionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 700,\n        margin: '2rem auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 700,\n        margin: '2rem auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: interestChartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"O7RupBn9mZShcxgfZ6VEqyjmgnI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","regionNames","Dashboard","_s","_housingRegion$data","_housingRegion$data$r","_interest$data","_interest$data$result","data","setData","err","setErr","selectedRegion","setSelectedRegion","fetch","then","res","json","catch","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","housingRegion","housing","find","r","regionId","interest","housingResults","results","filter","_r$values$","values","val","interestResults","_r$values$2","years","map","year","housingValues","_r$values$3","interestYears","interestValues","_r$values$4","housingChartData","labels","datasets","label","borderColor","backgroundColor","interestChartData","value","onChange","e","target","maxWidth","margin","options","responsive","plugins","legend","position","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n};\n\nconst Dashboard = () => {\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('060000000000');\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data')\n      .then(res => res.json())\n      .then(setData)\n      .catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n\n  if (err) return <div style={{ color: 'red' }}>{err}</div>;\n  if (!data) return <div>Ładowanie danych...</div>;\n\n  // Filtruj dane dla wybranego regionu\n  const housingRegion = data.housing.find(r => r.regionId === selectedRegion);\n  const interest = data.interest[1]; // Polska ogółem\n\n  // Przygotuj dane do wykresów, filtrując tylko te z wartościami liczbowymi\n  const housingResults = housingRegion?.data?.results?.filter(r => r.values[0]?.val != null) || [];\n  const interestResults = interest?.data?.results?.filter(r => r.values[0]?.val != null) || [];\n\n  const years = housingResults.map(r => r.year);\n  const housingValues = housingResults.map(r => r.values[0]?.val);\n  const interestYears = interestResults.map(r => r.year);\n  const interestValues = interestResults.map(r => r.values[0]?.val);\n\n  const housingChartData = {\n    labels: years,\n    datasets: [\n      {\n        label: `Ceny mieszkań (${regionNames[selectedRegion]})`,\n        data: housingValues,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(0,0,255,0.1)',\n      },\n    ],\n  };\n\n  const interestChartData = {\n    labels: interestYears,\n    datasets: [\n      {\n        label: 'Stopy procentowe (Polska)',\n        data: interestValues,\n        borderColor: 'green',\n        backgroundColor: 'rgba(0,255,0,0.1)',\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h1>Panel użytkownika</h1>\n      <p>Jesteś zalogowany!</p>\n      <h2>Dane z BDL</h2>\n      <div>\n        <label>Wybierz region:&nbsp;\n          <select value={selectedRegion} onChange={e => setSelectedRegion(e.target.value)}>\n            {data.housing.map(r => (\n              <option key={r.regionId} value={r.regionId}>\n                {regionNames[r.regionId] || r.regionId}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div style={{ maxWidth: 700, margin: '2rem auto' }}>\n        <Line data={housingChartData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} />\n      </div>\n      <div style={{ maxWidth: 700, margin: '2rem auto' }}>\n        <Line data={interestChartData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}