{"ast":null,"code":"var _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\integracjazgit\\\\integra_v2\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE'\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2'\n};\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedType, setSelectedType] = useState('633663');\n  const allRegionIds = Object.keys(regionNames);\n  const [visibleRegions, setVisibleRegions] = useState(() => Object.fromEntries(allRegionIds.map(id => [id, true])));\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n  const [selectedRegionForTypes, setSelectedRegionForTypes] = useState(allRegionIds[0]);\n  const navigate = useNavigate();\n\n  // Stan do eksportu\n  const [showExport, setShowExport] = useState(false);\n  const [exportRegions, setExportRegions] = useState(allRegionIds);\n  const [exportTypes, setExportTypes] = useState(Object.keys(housingTypeNames));\n  const [exportDateFrom, setExportDateFrom] = useState(2010);\n  const [exportDateTo, setExportDateTo] = useState(2023);\n  const [exportFormat, setExportFormat] = useState({\n    json: true,\n    xml: false\n  });\n\n  // Funkcja eksportu\n  const handleExport = async () => {\n    const params = new URLSearchParams();\n    exportRegions.forEach(r => params.append('regions', r));\n    exportTypes.forEach(t => params.append('types', t));\n    params.append('dateFrom', exportDateFrom);\n    params.append('dateTo', exportDateTo);\n    if (exportFormat.json) params.append('format', 'json');\n    if (exportFormat.xml) params.append('format', 'xml');\n    const res = await fetch(`http://localhost:4000/api/export?${params.toString()}`, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    });\n    const blob = await res.blob();\n    const contentDisposition = res.headers.get('Content-Disposition');\n    let filename = 'export';\n    if (contentDisposition) {\n      const match = contentDisposition.match(/filename=\"?([^\"]+)\"?/);\n      if (match) filename = match[1];\n    }\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    setShowExport(false);\n  };\n\n  // Wymuś logowanie\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data').then(res => res.json()).then(setData).catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg').then(res => res.json()).then(setNbpRefHistoryAvg).catch(() => {});\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/secure-data', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    }).then(res => res.json()).then(data => {\n      // obsłuż dane chronione\n      console.log('Dane chronione:', data);\n    }).catch(() => {\n      // obsłuż błąd autoryzacji\n    });\n  }, []);\n  if (err) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: err\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 19\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 21\n  }, this);\n  const handleRegionCheckbox = regionId => {\n    setVisibleRegions(prev => ({\n      ...prev,\n      [regionId]: !prev[regionId]\n    }));\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023);\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [{\n      label: 'Średnia roczna stopa referencyjna NBP',\n      data: nbpRefHistoryValues,\n      borderColor: 'orange',\n      backgroundColor: 'rgba(255,165,0,0.1)',\n      tension: 0.2\n    }]\n  };\n\n  // Wykres 1: regiony na jednym wykresie, typ mieszkania wybierany\n  const housingTypeData = data.housing[selectedType] || [];\n  const datasets = housingTypeData.filter(region => visibleRegions[region.regionId]).map(region => {\n    var _region$data;\n    const results = (((_region$data = region.data) === null || _region$data === void 0 ? void 0 : _region$data.results) || []).filter(r => {\n      var _r$values$;\n      return ((_r$values$ = r.values[0]) === null || _r$values$ === void 0 ? void 0 : _r$values$.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: regionNames[region.regionId] || region.regionId,\n      data: results.map(r => {\n        var _r$values$2;\n        return (_r$values$2 = r.values[0]) === null || _r$values$2 === void 0 ? void 0 : _r$values$2.val;\n      }),\n      borderColor: '#' + (Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567 % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2\n    };\n  });\n  const years = Array.from({\n    length: 11\n  }, (_, i) => (2013 + i).toString());\n  const housingChartData = {\n    labels: years,\n    datasets\n  };\n\n  // Wykres 2: typy mieszkań na jednym wykresie, region wybierany\n  const datasetsByType = Object.entries(housingTypeNames).map(([typeId, typeName]) => {\n    var _regionData$data;\n    const regionData = (data.housing[typeId] || []).find(r => r.regionId === selectedRegionForTypes);\n    const results = ((regionData === null || regionData === void 0 ? void 0 : (_regionData$data = regionData.data) === null || _regionData$data === void 0 ? void 0 : _regionData$data.results) || []).filter(r => {\n      var _r$values$3;\n      return ((_r$values$3 = r.values[0]) === null || _r$values$3 === void 0 ? void 0 : _r$values$3.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: typeName,\n      data: results.map(r => {\n        var _r$values$4;\n        return (_r$values$4 = r.values[0]) === null || _r$values$4 === void 0 ? void 0 : _r$values$4.val;\n      }),\n      borderColor: '#' + (Math.abs(typeId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 654321 % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2\n    };\n  });\n  const housingChartDataByType = {\n    labels: years,\n    datasets: datasetsByType\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel u\\u017Cytkownika\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      style: {\n        float: 'right',\n        marginTop: '-3rem'\n      },\n      children: \"Wyloguj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeste\\u015B zalogowany!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dane z BDL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowExport(true),\n      style: {\n        margin: '1rem 0'\n      },\n      children: \"Eksportuj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), showExport && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: 24,\n          borderRadius: 8,\n          minWidth: 350\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Eksport danych\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Regiony:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 40\n          }, this), allRegionIds.map(regionId => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: exportRegions.includes(regionId),\n              onChange: e => {\n                setExportRegions(regions => e.target.checked ? [...regions, regionId] : regions.filter(r => r !== regionId));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), regionNames[regionId]]\n          }, regionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Typy mieszka\\u0144:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 46\n          }, this), Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: exportTypes.includes(typeId),\n              onChange: e => {\n                setExportTypes(types => e.target.checked ? [...types, typeId] : types.filter(t => t !== typeId));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), name]\n          }, typeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Zakres lat:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"2010\",\n            max: \"2023\",\n            value: exportDateFrom,\n            onChange: e => setExportDateFrom(Number(e.target.value)),\n            style: {\n              width: 70\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), ' ', \"do\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"2010\",\n            max: \"2023\",\n            value: exportDateTo,\n            onChange: e => setExportDateTo(Number(e.target.value)),\n            style: {\n              width: 70\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Format eksportu:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: exportFormat.json,\n              onChange: e => setExportFormat(f => ({\n                ...f,\n                json: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), \" JSON\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: exportFormat.xml,\n              onChange: e => setExportFormat(f => ({\n                ...f,\n                xml: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), \" XML\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExport,\n            disabled: !exportFormat.json && !exportFormat.xml,\n            children: \"Eksportuj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowExport(false),\n            style: {\n              marginLeft: 8\n            },\n            children: \"Anuluj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Typ mieszkania:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedType,\n          onChange: e => setSelectedType(e.target.value),\n          children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: typeId,\n            children: name\n          }, typeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 32,\n        justifyContent: 'center',\n        margin: '2rem auto',\n        maxWidth: 1700\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ceny mieszka\\u0144 (wszystkie regiony, wybrany typ)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: housingChartData,\n          options: {\n            scales: {\n              y: {\n                title: {\n                  display: true,\n                  text: 'Cena (PLN)'\n                },\n                ticks: {\n                  stepSize: 50000,\n                  callback: function (value) {\n                    return value.toLocaleString('pl-PL') + ' zł';\n                  }\n                }\n              },\n              x: {\n                title: {\n                  display: true,\n                  text: 'Rok'\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Stopa referencyjna NBP (historia)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: nbpRefHistoryChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 1000,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ceny mieszka\\u0144 wg typu dla wybranego regionu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Wybierz region:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRegionForTypes,\n          onChange: e => setSelectedRegionForTypes(e.target.value),\n          children: allRegionIds.map(regionId => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: regionId,\n            children: regionNames[regionId]\n          }, regionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartDataByType,\n        options: {\n          scales: {\n            y: {\n              title: {\n                display: true,\n                text: 'Cena (PLN)'\n              },\n              ticks: {\n                stepSize: 50000,\n                callback: function (value) {\n                  return value.toLocaleString('pl-PL') + ' zł';\n                }\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"yyEKY64Rmsa8MYdCdET8IQhbKew=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","useNavigate","jsxDEV","_jsxDEV","register","regionNames","housingTypeNames","Dashboard","_s","data","setData","err","setErr","selectedType","setSelectedType","allRegionIds","Object","keys","visibleRegions","setVisibleRegions","fromEntries","map","id","nbpRefHistoryAvg","setNbpRefHistoryAvg","selectedRegionForTypes","setSelectedRegionForTypes","navigate","showExport","setShowExport","exportRegions","setExportRegions","exportTypes","setExportTypes","exportDateFrom","setExportDateFrom","exportDateTo","setExportDateTo","exportFormat","setExportFormat","json","xml","handleExport","params","URLSearchParams","forEach","r","append","t","res","fetch","toString","headers","Authorization","localStorage","getItem","blob","contentDisposition","get","filename","match","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","token","then","catch","console","log","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","handleRegionCheckbox","regionId","prev","handleLogout","removeItem","nbpRefHistoryAvgFiltered","filter","parseInt","year","nbpRefHistoryLabels","nbpRefHistoryValues","avgRate","nbpRefHistoryChartData","labels","datasets","label","borderColor","backgroundColor","tension","housingTypeData","housing","region","_region$data","results","_r$values$","values","val","_r$values$2","Math","abs","split","reduce","c","charCodeAt","padStart","years","Array","from","length","_","i","housingChartData","datasetsByType","entries","typeId","typeName","_regionData$data","regionData","find","_r$values$3","_r$values$4","housingChartDataByType","onClick","float","marginTop","margin","position","top","left","width","height","background","display","alignItems","justifyContent","zIndex","padding","borderRadius","minWidth","type","checked","includes","onChange","e","regions","target","name","types","min","max","value","Number","f","marginLeft","disabled","gap","maxWidth","flex","options","scales","y","title","text","ticks","stepSize","callback","toLocaleString","x","_c","$RefreshReg$"],"sources":["E:/xampp/htdocs/integracjazgit/integra_v2/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst regionNames = {\r\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\r\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\r\n  '031610000000': 'REGION OPOLSKIE',\r\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\r\n  '042210000000': 'REGION POMORSKIE',\r\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\r\n  '051010000000': 'REGION ŁÓDZKIE',\r\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\r\n  '060610000000': 'REGION LUBELSKIE',\r\n  '061810000000': 'REGION PODKARPACKIE',\r\n  '062010000000': 'REGION PODLASKIE',\r\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\r\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\r\n  '011210000000': 'REGION MAŁOPOLSKIE',\r\n  '012410000000': 'REGION ŚLĄSKIE',\r\n  '020810000000': 'REGION LUBUSKIE',\r\n  '023010000000': 'REGION WIELKOPOLSKIE',\r\n};\r\nconst housingTypeNames = {\r\n  '633663': 'do 40m2',\r\n  '633664': 'od 40.1 m2 do 60m2',\r\n  '633665': 'od 60m2 do 80m2',\r\n  '633666': 'od 80m2',\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState(null);\r\n  const [err, setErr] = useState('');\r\n  const [selectedType, setSelectedType] = useState('633663');\r\n  const allRegionIds = Object.keys(regionNames);\r\n  const [visibleRegions, setVisibleRegions] = useState(() =>\r\n    Object.fromEntries(allRegionIds.map(id => [id, true]))\r\n  );\r\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\r\n  const [selectedRegionForTypes, setSelectedRegionForTypes] = useState(allRegionIds[0]);\r\n  const navigate = useNavigate();\r\n\r\n  // Stan do eksportu\r\n  const [showExport, setShowExport] = useState(false);\r\n  const [exportRegions, setExportRegions] = useState(allRegionIds);\r\n  const [exportTypes, setExportTypes] = useState(Object.keys(housingTypeNames));\r\n  const [exportDateFrom, setExportDateFrom] = useState(2010);\r\n  const [exportDateTo, setExportDateTo] = useState(2023);\r\n  const [exportFormat, setExportFormat] = useState({ json: true, xml: false });\r\n\r\n  // Funkcja eksportu\r\n  const handleExport = async () => {\r\n    const params = new URLSearchParams();\r\n    exportRegions.forEach(r => params.append('regions', r));\r\n    exportTypes.forEach(t => params.append('types', t));\r\n    params.append('dateFrom', exportDateFrom);\r\n    params.append('dateTo', exportDateTo);\r\n    if (exportFormat.json) params.append('format', 'json');\r\n    if (exportFormat.xml) params.append('format', 'xml');\r\n\r\n    const res = await fetch(`http://localhost:4000/api/export?${params.toString()}`, {\r\n      headers: { Authorization: 'Bearer ' + localStorage.getItem('token') }\r\n    });\r\n    const blob = await res.blob();\r\n    const contentDisposition = res.headers.get('Content-Disposition');\r\n    let filename = 'export';\r\n    if (contentDisposition) {\r\n      const match = contentDisposition.match(/filename=\"?([^\"]+)\"?/);\r\n      if (match) filename = match[1];\r\n    }\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    setShowExport(false);\r\n  };\r\n\r\n  // Wymuś logowanie\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/api/bdl-data')\r\n      .then(res => res.json())\r\n      .then(setData)\r\n      .catch(() => setErr('Błąd pobierania danych z serwera'));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/api/nbp-ref-history-avg')\r\n      .then(res => res.json())\r\n      .then(setNbpRefHistoryAvg)\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/api/secure-data', {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // obsłuż dane chronione\r\n        console.log('Dane chronione:', data);\r\n      })\r\n      .catch(() => {\r\n        // obsłuż błąd autoryzacji\r\n      });\r\n  }, []);\r\n\r\n  if (err) return <div style={{ color: 'red' }}>{err}</div>;\r\n  if (!data) return <div>Ładowanie danych...</div>;\r\n\r\n  const handleRegionCheckbox = (regionId) => {\r\n    setVisibleRegions(prev => ({\r\n      ...prev,\r\n      [regionId]: !prev[regionId]\r\n    }));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  };\r\n\r\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(\r\n    r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023\r\n  );\r\n\r\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\r\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\r\n\r\n  const nbpRefHistoryChartData = {\r\n    labels: nbpRefHistoryLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Średnia roczna stopa referencyjna NBP',\r\n        data: nbpRefHistoryValues,\r\n        borderColor: 'orange',\r\n        backgroundColor: 'rgba(255,165,0,0.1)',\r\n        tension: 0.2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Wykres 1: regiony na jednym wykresie, typ mieszkania wybierany\r\n  const housingTypeData = data.housing[selectedType] || [];\r\n  const datasets = housingTypeData\r\n    .filter(region => visibleRegions[region.regionId])\r\n    .map(region => {\r\n      const results = (region.data?.results || []).filter(\r\n        r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\r\n      );\r\n      return {\r\n        label: regionNames[region.regionId] || region.regionId,\r\n        data: results.map(r => r.values[0]?.val),\r\n        borderColor: '#' + ((Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567) % 0xffffff).toString(16).padStart(6, '0'),\r\n        backgroundColor: 'rgba(0,0,0,0.05)',\r\n        tension: 0.2,\r\n      };\r\n    });\r\n\r\n  const years = Array.from({ length: 11 }, (_, i) => (2013 + i).toString());\r\n\r\n  const housingChartData = {\r\n    labels: years,\r\n    datasets,\r\n  };\r\n\r\n  // Wykres 2: typy mieszkań na jednym wykresie, region wybierany\r\n  const datasetsByType = Object.entries(housingTypeNames).map(([typeId, typeName]) => {\r\n    const regionData = (data.housing[typeId] || []).find(r => r.regionId === selectedRegionForTypes);\r\n    const results = (regionData?.data?.results || []).filter(\r\n      r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\r\n    );\r\n    return {\r\n      label: typeName,\r\n      data: results.map(r => r.values[0]?.val),\r\n      borderColor: '#' + ((Math.abs(typeId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 654321) % 0xffffff).toString(16).padStart(6, '0'),\r\n      backgroundColor: 'rgba(0,0,0,0.05)',\r\n      tension: 0.2,\r\n    };\r\n  });\r\n\r\n  const housingChartDataByType = {\r\n    labels: years,\r\n    datasets: datasetsByType,\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Panel użytkownika</h1>\r\n      <button onClick={handleLogout} style={{ float: 'right', marginTop: '-3rem' }}>Wyloguj</button>\r\n      <p>Jesteś zalogowany!</p>\r\n      <h2>Dane z BDL</h2>\r\n      <button onClick={() => setShowExport(true)} style={{ margin: '1rem 0' }}>Eksportuj</button>\r\n      {showExport && (\r\n        <div style={{\r\n          position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\r\n          background: 'rgba(0,0,0,0.3)', display: 'flex', alignItems: 'center', justifyContent: 'center', zIndex: 1000\r\n        }}>\r\n          <div style={{ background: '#fff', padding: 24, borderRadius: 8, minWidth: 350 }}>\r\n            <h3>Eksport danych</h3>\r\n            <div>\r\n              <strong>Regiony:</strong><br />\r\n              {allRegionIds.map(regionId => (\r\n                <label key={regionId} style={{ display: 'block' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={exportRegions.includes(regionId)}\r\n                    onChange={e => {\r\n                      setExportRegions(regions =>\r\n                        e.target.checked\r\n                          ? [...regions, regionId]\r\n                          : regions.filter(r => r !== regionId)\r\n                      );\r\n                    }}\r\n                  />\r\n                  {regionNames[regionId]}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <strong>Typy mieszkań:</strong><br />\r\n              {Object.entries(housingTypeNames).map(([typeId, name]) => (\r\n                <label key={typeId} style={{ display: 'block' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={exportTypes.includes(typeId)}\r\n                    onChange={e => {\r\n                      setExportTypes(types =>\r\n                        e.target.checked\r\n                          ? [...types, typeId]\r\n                          : types.filter(t => t !== typeId)\r\n                      );\r\n                    }}\r\n                  />\r\n                  {name}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <strong>Zakres lat:</strong><br />\r\n              <input\r\n                type=\"number\"\r\n                min=\"2010\"\r\n                max=\"2023\"\r\n                value={exportDateFrom}\r\n                onChange={e => setExportDateFrom(Number(e.target.value))}\r\n                style={{ width: 70 }}\r\n              />{' '}\r\n              do{' '}\r\n              <input\r\n                type=\"number\"\r\n                min=\"2010\"\r\n                max=\"2023\"\r\n                value={exportDateTo}\r\n                onChange={e => setExportDateTo(Number(e.target.value))}\r\n                style={{ width: 70 }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <strong>Format eksportu:</strong><br />\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={exportFormat.json}\r\n                  onChange={e => setExportFormat(f => ({ ...f, json: e.target.checked }))}\r\n                /> JSON\r\n              </label>\r\n              <label style={{ marginLeft: 16 }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={exportFormat.xml}\r\n                  onChange={e => setExportFormat(f => ({ ...f, xml: e.target.checked }))}\r\n                /> XML\r\n              </label>\r\n            </div>\r\n            <div style={{ marginTop: 16 }}>\r\n              <button onClick={handleExport} disabled={!exportFormat.json && !exportFormat.xml}>Eksportuj</button>\r\n              <button onClick={() => setShowExport(false)} style={{ marginLeft: 8 }}>Anuluj</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <label>Typ mieszkania:&nbsp;\r\n          <select value={selectedType} onChange={e => setSelectedType(e.target.value)}>\r\n            {Object.entries(housingTypeNames).map(([typeId, name]) => (\r\n              <option key={typeId} value={typeId}>{name}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      {/* Dwa wykresy obok siebie */}\r\n      <div style={{ display: 'flex', gap: 32, justifyContent: 'center', margin: '2rem auto', maxWidth: 1700 }}>\r\n        <div style={{ flex: 1, minWidth: 400 }}>\r\n          <h3>Ceny mieszkań (wszystkie regiony, wybrany typ)</h3>\r\n          <Line\r\n            data={housingChartData}\r\n            options={{\r\n              scales: {\r\n                y: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Cena (PLN)'\r\n                  },\r\n                  ticks: {\r\n                    stepSize: 50000,\r\n                    callback: function(value) {\r\n                      return value.toLocaleString('pl-PL') + ' zł';\r\n                    }\r\n                  }\r\n                },\r\n                x: {\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Rok'\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={{ flex: 1, minWidth: 400 }}>\r\n          <h3>Stopa referencyjna NBP (historia)</h3>\r\n          <Line data={nbpRefHistoryChartData} />\r\n        </div>\r\n      </div>\r\n      {/* Pozostałe wykresy pod spodem */}\r\n      <div style={{ maxWidth: 1000, margin: '2rem auto' }}>\r\n        <h3>Ceny mieszkań wg typu dla wybranego regionu</h3>\r\n        <label>\r\n          Wybierz region:&nbsp;\r\n          <select\r\n            value={selectedRegionForTypes}\r\n            onChange={e => setSelectedRegionForTypes(e.target.value)}\r\n          >\r\n            {allRegionIds.map(regionId => (\r\n              <option key={regionId} value={regionId}>\r\n                {regionNames[regionId]}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <Line\r\n          data={housingChartDataByType}\r\n          options={{\r\n            scales: {\r\n              y: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Cena (PLN)'\r\n                },\r\n                ticks: {\r\n                  stepSize: 50000,\r\n                  callback: function(value) {\r\n                    return value.toLocaleString('pl-PL') + ' zł';\r\n                  }\r\n                }\r\n              },\r\n              x: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Rok'\r\n                }\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}