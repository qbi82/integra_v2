{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE'\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2'\n};\nconst Dashboard = () => {\n  _s();\n  var _housingRegion$data;\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('060610000000');\n  const [selectedType, setSelectedType] = useState('633663'); // domyślny typ\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data').then(res => res.json()).then(setData).catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg').then(res => res.json()).then(setNbpRefHistoryAvg).catch(() => {});\n  }, []);\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023);\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [{\n      label: 'Średnia roczna stopa referencyjna NBP',\n      data: nbpRefHistoryValues,\n      borderColor: 'orange',\n      backgroundColor: 'rgba(255,165,0,0.1)',\n      tension: 0.2\n    }]\n  };\n  if (err) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: err\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 19\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 21\n  }, this);\n\n  // Pobierz dane dla wybranego typu mieszkania i stopy procentowej\n  const housingTypeData = data.housing[selectedType] || [];\n  // Filtruj dane dla wybranego regionu\n  const housingRegion = housingTypeData.find(r => r.regionId === selectedRegion);\n  const housingResults = ((housingRegion === null || housingRegion === void 0 ? void 0 : (_housingRegion$data = housingRegion.data) === null || _housingRegion$data === void 0 ? void 0 : _housingRegion$data.results) || []).filter(r => {\n    var _r$values$;\n    return ((_r$values$ = r.values[0]) === null || _r$values$ === void 0 ? void 0 : _r$values$.val) != null && r.year >= 2013 && r.year <= 2023;\n  });\n  const years = housingResults.map(r => r.year);\n  const housingValues = housingResults.map(r => {\n    var _r$values$2;\n    return (_r$values$2 = r.values[0]) === null || _r$values$2 === void 0 ? void 0 : _r$values$2.val;\n  });\n  const housingChartData = {\n    labels: years,\n    datasets: [{\n      label: `Ceny mieszkań (${regionNames[selectedRegion]})`,\n      data: housingValues,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0,0,255,0.1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel u\\u017Cytkownika\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeste\\u015B zalogowany!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dane z BDL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Wybierz region:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRegion,\n          onChange: e => setSelectedRegion(e.target.value),\n          children: Object.keys(regionNames).map(regionId => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: regionId,\n            children: regionNames[regionId]\n          }, regionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 16\n        },\n        children: [\"Typ mieszkania:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedType,\n          onChange: e => setSelectedType(e.target.value),\n          children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: typeId,\n            children: name\n          }, typeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 800,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ceny mieszka\\u0144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 800,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Stopa referencyjna NBP (historia)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: nbpRefHistoryChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"OeXj5sbMW5Dry54jzCXBf/xfjPU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","regionNames","housingTypeNames","Dashboard","_s","_housingRegion$data","data","setData","err","setErr","selectedRegion","setSelectedRegion","selectedType","setSelectedType","fetch","then","res","json","catch","nbpRefHistoryAvg","setNbpRefHistoryAvg","nbpRefHistoryAvgFiltered","filter","r","parseInt","year","nbpRefHistoryLabels","map","nbpRefHistoryValues","avgRate","nbpRefHistoryChartData","labels","datasets","label","borderColor","backgroundColor","tension","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","housingTypeData","housing","housingRegion","find","regionId","housingResults","results","_r$values$","values","val","years","housingValues","_r$values$2","housingChartData","value","onChange","e","target","Object","keys","marginLeft","entries","typeId","name","maxWidth","margin","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE',\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2',\n};\n\nconst Dashboard = () => {\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState('060610000000');\n  const [selectedType, setSelectedType] = useState('633663'); // domyślny typ\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data')\n      .then(res => res.json())\n      .then(setData)\n      .catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n\nconst [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n\nuseEffect(() => {\n  fetch('http://localhost:4000/api/nbp-ref-history-avg')\n    .then(res => res.json())\n    .then(setNbpRefHistoryAvg)\n    .catch(() => {});\n}, []);\n\nconst nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(\n  r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023\n);\n\nconst nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\nconst nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n\nconst nbpRefHistoryChartData = {\n  labels: nbpRefHistoryLabels,\n  datasets: [\n    {\n      label: 'Średnia roczna stopa referencyjna NBP',\n      data: nbpRefHistoryValues,\n      borderColor: 'orange',\n      backgroundColor: 'rgba(255,165,0,0.1)',\n      tension: 0.2,\n    },\n  ],\n};\n  if (err) return <div style={{ color: 'red' }}>{err}</div>;\n  if (!data) return <div>Ładowanie danych...</div>;\n\n  // Pobierz dane dla wybranego typu mieszkania i stopy procentowej\n  const housingTypeData = data.housing[selectedType] || [];\n  // Filtruj dane dla wybranego regionu\n  const housingRegion = housingTypeData.find(r => r.regionId === selectedRegion);\n  const housingResults = (housingRegion?.data?.results || []).filter(\n    r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\n  );\n\n\n  const years = housingResults.map(r => r.year);\n  const housingValues = housingResults.map(r => r.values[0]?.val);\n\n  const housingChartData = {\n    labels: years,\n    datasets: [\n      {\n        label: `Ceny mieszkań (${regionNames[selectedRegion]})`,\n        data: housingValues,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(0,0,255,0.1)',\n      },\n    ],\n  };\n\n\n  return (\n    <div>\n      <h1>Panel użytkownika</h1>\n      <p>Jesteś zalogowany!</p>\n      <h2>Dane z BDL</h2>\n      <div>\n        <label>Wybierz region:&nbsp;\n          <select value={selectedRegion} onChange={e => setSelectedRegion(e.target.value)}>\n            {Object.keys(regionNames).map(regionId => (\n              <option key={regionId} value={regionId}>\n                {regionNames[regionId]}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label style={{ marginLeft: 16 }}>Typ mieszkania:&nbsp;\n          <select value={selectedType} onChange={e => setSelectedType(e.target.value)}>\n            {Object.entries(housingTypeNames).map(([typeId, name]) => (\n              <option key={typeId} value={typeId}>{name}</option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div style={{ maxWidth: 800, margin: '2rem auto' }}>\n        <h3>Ceny mieszkań</h3>\n        <Line data={housingChartData} />\n      </div>\n        <div style={{ maxWidth: 800, margin: '2rem auto' }}>\n          <h3>Stopa referencyjna NBP (historia)</h3>\n            <Line data={nbpRefHistoryChartData} />\n        </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}