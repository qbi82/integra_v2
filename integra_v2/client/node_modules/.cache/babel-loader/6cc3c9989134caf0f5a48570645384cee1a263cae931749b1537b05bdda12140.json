{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE'\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2'\n};\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedType, setSelectedType] = useState('633663');\n  const allRegionIds = Object.keys(regionNames);\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n  const [selectedRegionForTypes, setSelectedRegionForTypes] = useState(allRegionIds[0]);\n  const navigate = useNavigate();\n\n  // Wymuś logowanie\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data').then(res => res.json()).then(setData).catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg').then(res => res.json()).then(setNbpRefHistoryAvg).catch(() => {});\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/secure-data', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    }).then(res => res.json()).then(data => {\n      // obsłuż dane chronione\n      console.log('Dane chronione:', data);\n    }).catch(() => {\n      // obsłuż błąd autoryzacji\n    });\n  }, []);\n  if (err) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: err\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 19\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 21\n  }, this);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023);\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [{\n      label: 'Średnia roczna stopa referencyjna NBP',\n      data: nbpRefHistoryValues,\n      borderColor: 'orange',\n      backgroundColor: 'rgba(255,165,0,0.1)',\n      tension: 0.2\n    }]\n  };\n\n  // Wykres 1: regiony na jednym wykresie, typ mieszkania wybierany\n  const housingTypeData = data.housing[selectedType] || [];\n  const datasets = housingTypeData.filter(region => visibleRegions[region.regionId]).map(region => {\n    var _region$data;\n    const results = (((_region$data = region.data) === null || _region$data === void 0 ? void 0 : _region$data.results) || []).filter(r => {\n      var _r$values$;\n      return ((_r$values$ = r.values[0]) === null || _r$values$ === void 0 ? void 0 : _r$values$.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: regionNames[region.regionId] || region.regionId,\n      data: results.map(r => {\n        var _r$values$2;\n        return (_r$values$2 = r.values[0]) === null || _r$values$2 === void 0 ? void 0 : _r$values$2.val;\n      }),\n      borderColor: '#' + (Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567 % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2\n    };\n  });\n  const years = Array.from({\n    length: 11\n  }, (_, i) => (2013 + i).toString());\n  const housingChartData = {\n    labels: years,\n    datasets\n  };\n\n  // Wykres 2: typy mieszkań na jednym wykresie, region wybierany\n  const datasetsByType = Object.entries(housingTypeNames).map(([typeId, typeName]) => {\n    var _regionData$data;\n    const regionData = (data.housing[typeId] || []).find(r => r.regionId === selectedRegionForTypes);\n    const results = ((regionData === null || regionData === void 0 ? void 0 : (_regionData$data = regionData.data) === null || _regionData$data === void 0 ? void 0 : _regionData$data.results) || []).filter(r => {\n      var _r$values$3;\n      return ((_r$values$3 = r.values[0]) === null || _r$values$3 === void 0 ? void 0 : _r$values$3.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: typeName,\n      data: results.map(r => {\n        var _r$values$4;\n        return (_r$values$4 = r.values[0]) === null || _r$values$4 === void 0 ? void 0 : _r$values$4.val;\n      }),\n      borderColor: '#' + (Math.abs(typeId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 654321 % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2\n    };\n  });\n  const housingChartDataByType = {\n    labels: years,\n    datasets: datasetsByType\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel u\\u017Cytkownika\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      style: {\n        float: 'right',\n        marginTop: '-3rem'\n      },\n      children: \"Wyloguj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeste\\u015B zalogowany!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dane z BDL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Typ mieszkania:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedType,\n          onChange: e => setSelectedType(e.target.value),\n          children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: typeId,\n            children: name\n          }, typeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 1000,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ceny mieszka\\u0144 (wszystkie regiony, wybrany typ)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartData,\n        options: {\n          scales: {\n            y: {\n              title: {\n                display: true,\n                text: 'Cena (PLN)'\n              },\n              ticks: {\n                stepSize: 50000,\n                callback: function (value) {\n                  return value.toLocaleString('pl-PL') + ' zł';\n                }\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 1000,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ceny mieszka\\u0144 wg typu dla wybranego regionu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Wybierz region:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRegionForTypes,\n          onChange: e => setSelectedRegionForTypes(e.target.value),\n          children: allRegionIds.map(regionId => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: regionId,\n            children: regionNames[regionId]\n          }, regionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartDataByType,\n        options: {\n          scales: {\n            y: {\n              title: {\n                display: true,\n                text: 'Cena (PLN)'\n              },\n              ticks: {\n                stepSize: 50000,\n                callback: function (value) {\n                  return value.toLocaleString('pl-PL') + ' zł';\n                }\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 800,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Stopa referencyjna NBP (historia)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: nbpRefHistoryChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"w/5e48Kq9xhc2GqRMPjn2QJLv0Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","useNavigate","jsxDEV","_jsxDEV","register","regionNames","housingTypeNames","Dashboard","_s","data","setData","err","setErr","selectedType","setSelectedType","allRegionIds","Object","keys","nbpRefHistoryAvg","setNbpRefHistoryAvg","selectedRegionForTypes","setSelectedRegionForTypes","navigate","token","localStorage","getItem","fetch","then","res","json","catch","headers","Authorization","console","log","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","removeItem","nbpRefHistoryAvgFiltered","filter","r","parseInt","year","nbpRefHistoryLabels","map","nbpRefHistoryValues","avgRate","nbpRefHistoryChartData","labels","datasets","label","borderColor","backgroundColor","tension","housingTypeData","housing","region","visibleRegions","regionId","_region$data","results","_r$values$","values","val","_r$values$2","Math","abs","split","reduce","a","c","charCodeAt","toString","padStart","years","Array","from","length","_","i","housingChartData","datasetsByType","entries","typeId","typeName","_regionData$data","regionData","find","_r$values$3","_r$values$4","housingChartDataByType","onClick","float","marginTop","value","onChange","e","target","name","maxWidth","margin","options","scales","y","title","display","text","ticks","stepSize","callback","toLocaleString","x","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE',\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2',\n};\n\nconst Dashboard = () => {\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedType, setSelectedType] = useState('633663');\n  const allRegionIds = Object.keys(regionNames);\n\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n  const [selectedRegionForTypes, setSelectedRegionForTypes] = useState(allRegionIds[0]);\n  const navigate = useNavigate();\n\n  // Wymuś logowanie\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data')\n      .then(res => res.json())\n      .then(setData)\n      .catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg')\n      .then(res => res.json())\n      .then(setNbpRefHistoryAvg)\n      .catch(() => {});\n  }, []);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/secure-data', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        // obsłuż dane chronione\n        console.log('Dane chronione:', data);\n      })\n      .catch(() => {\n        // obsłuż błąd autoryzacji\n      });\n  }, []);\n\n  if (err) return <div style={{ color: 'red' }}>{err}</div>;\n  if (!data) return <div>Ładowanie danych...</div>;\n\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(\n    r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023\n  );\n\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [\n      {\n        label: 'Średnia roczna stopa referencyjna NBP',\n        data: nbpRefHistoryValues,\n        borderColor: 'orange',\n        backgroundColor: 'rgba(255,165,0,0.1)',\n        tension: 0.2,\n      },\n    ],\n  };\n\n  // Wykres 1: regiony na jednym wykresie, typ mieszkania wybierany\n  const housingTypeData = data.housing[selectedType] || [];\n  const datasets = housingTypeData\n    .filter(region => visibleRegions[region.regionId])\n    .map(region => {\n      const results = (region.data?.results || []).filter(\n        r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\n      );\n      return {\n        label: regionNames[region.regionId] || region.regionId,\n        data: results.map(r => r.values[0]?.val),\n        borderColor: '#' + ((Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567) % 0xffffff).toString(16).padStart(6, '0'),\n        backgroundColor: 'rgba(0,0,0,0.05)',\n        tension: 0.2,\n      };\n    });\n\n  const years = Array.from({ length: 11 }, (_, i) => (2013 + i).toString());\n\n  const housingChartData = {\n    labels: years,\n    datasets,\n  };\n\n  // Wykres 2: typy mieszkań na jednym wykresie, region wybierany\n  const datasetsByType = Object.entries(housingTypeNames).map(([typeId, typeName]) => {\n    const regionData = (data.housing[typeId] || []).find(r => r.regionId === selectedRegionForTypes);\n    const results = (regionData?.data?.results || []).filter(\n      r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\n    );\n    return {\n      label: typeName,\n      data: results.map(r => r.values[0]?.val),\n      borderColor: '#' + ((Math.abs(typeId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 654321) % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2,\n    };\n  });\n\n  const housingChartDataByType = {\n    labels: years,\n    datasets: datasetsByType,\n  };\n\n  return (\n    <div>\n      <h1>Panel użytkownika</h1>\n      <button onClick={handleLogout} style={{ float: 'right', marginTop: '-3rem' }}>Wyloguj</button>\n      <p>Jesteś zalogowany!</p>\n      <h2>Dane z BDL</h2>\n      <div>\n        <label>Typ mieszkania:&nbsp;\n          <select value={selectedType} onChange={e => setSelectedType(e.target.value)}>\n            {Object.entries(housingTypeNames).map(([typeId, name]) => (\n              <option key={typeId} value={typeId}>{name}</option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div style={{ maxWidth: 1000, margin: '2rem auto' }}>\n        <h3>Ceny mieszkań (wszystkie regiony, wybrany typ)</h3>\n        <Line\n          data={housingChartData}\n          options={{\n            scales: {\n              y: {\n                title: {\n                  display: true,\n                  text: 'Cena (PLN)'\n                },\n                ticks: {\n                  stepSize: 50000,\n                  callback: function(value) {\n                    return value.toLocaleString('pl-PL') + ' zł';\n                  }\n                }\n              },\n              x: {\n                title: {\n                  display: true,\n                  text: 'Rok'\n                }\n              }\n            }\n          }}\n        />\n        \n      </div>\n      <div style={{ maxWidth: 1000, margin: '2rem auto' }}>\n        <h3>Ceny mieszkań wg typu dla wybranego regionu</h3>\n        <label>\n          Wybierz region:&nbsp;\n          <select\n            value={selectedRegionForTypes}\n            onChange={e => setSelectedRegionForTypes(e.target.value)}\n          >\n            {allRegionIds.map(regionId => (\n              <option key={regionId} value={regionId}>\n                {regionNames[regionId]}\n              </option>\n            ))}\n          </select>\n        </label>\n        <Line\n          data={housingChartDataByType}\n          options={{\n            scales: {\n              y: {\n                title: {\n                  display: true,\n                  text: 'Cena (PLN)'\n                },\n                ticks: {\n                  stepSize: 50000,\n                  callback: function(value) {\n                    return value.toLocaleString('pl-PL') + ' zł';\n                  }\n                }\n              },\n              x: {\n                title: {\n                  display: true,\n                  text: 'Rok'\n                }\n              }\n            }\n          }}\n        />\n      </div>\n\n      <div style={{ maxWidth: 800, margin: '2rem auto' }}>\n        <h3>Stopa referencyjna NBP (historia)</h3>\n        <Line data={nbpRefHistoryChartData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}