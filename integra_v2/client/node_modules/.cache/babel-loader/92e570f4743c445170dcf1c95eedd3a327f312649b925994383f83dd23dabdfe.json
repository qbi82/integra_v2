{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE'\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2'\n};\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedType, setSelectedType] = useState('633663'); // domyślny typ\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data').then(res => res.json()).then(setData).catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg').then(res => res.json()).then(setNbpRefHistoryAvg).catch(() => {});\n  }, []);\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023);\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [{\n      label: 'Średnia roczna stopa referencyjna NBP',\n      data: nbpRefHistoryValues,\n      borderColor: 'orange',\n      backgroundColor: 'rgba(255,165,0,0.1)',\n      tension: 0.2\n    }]\n  };\n\n  // Pobierz dane dla wybranego typu mieszkania\n  const allRegionIds = Object.keys(regionNames);\n  const [visibleRegions, setVisibleRegions] = useState(() => Object.fromEntries(allRegionIds.map(id => [id, true])));\n  if (err) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: err\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 19\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 21\n  }, this);\n\n  // UWAGA: useState nie może być po warunku! Przenieś go wyżej, jak wyżej w tym kodzie.\n\n  const handleRegionCheckbox = regionId => {\n    setVisibleRegions(prev => ({\n      ...prev,\n      [regionId]: !prev[regionId]\n    }));\n  };\n  const housingTypeData = data.housing[selectedType] || [];\n  const datasets = housingTypeData.filter(region => visibleRegions[region.regionId]).map(region => {\n    var _region$data;\n    const results = (((_region$data = region.data) === null || _region$data === void 0 ? void 0 : _region$data.results) || []).filter(r => {\n      var _r$values$;\n      return ((_r$values$ = r.values[0]) === null || _r$values$ === void 0 ? void 0 : _r$values$.val) != null && r.year >= 2013 && r.year <= 2023;\n    });\n    return {\n      label: regionNames[region.regionId] || region.regionId,\n      data: results.map(r => {\n        var _r$values$2;\n        return (_r$values$2 = r.values[0]) === null || _r$values$2 === void 0 ? void 0 : _r$values$2.val;\n      }),\n      borderColor: '#' + (Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567 % 0xffffff).toString(16).padStart(6, '0'),\n      backgroundColor: 'rgba(0,0,0,0.05)',\n      tension: 0.2\n    };\n  });\n  const years = Array.from({\n    length: 11\n  }, (_, i) => (2013 + i).toString());\n  const housingChartData = {\n    labels: years,\n    datasets\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel u\\u017Cytkownika\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jeste\\u015B zalogowany!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dane z BDL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Typ mieszkania:\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedType,\n          onChange: e => setSelectedType(e.target.value),\n          children: Object.entries(housingTypeNames).map(([typeId, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: typeId,\n            children: name\n          }, typeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 800,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ceny mieszka\\u0144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: housingChartData,\n        options: {\n          scales: {\n            y: {\n              title: {\n                display: true,\n                text: 'Cena (PLN)'\n              },\n              ticks: {\n                stepSize: 50000,\n                callback: function (value) {\n                  return value.toLocaleString('pl-PL') + ' zł';\n                }\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '1rem 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Poka\\u017C regiony:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 1\n          },\n          children: allRegionIds.map(regionId => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: visibleRegions[regionId],\n              onChange: () => handleRegionCheckbox(regionId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), regionNames[regionId]]\n          }, regionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 800,\n        margin: '2rem auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Stopa referencyjna NBP (historia)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: nbpRefHistoryChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"WCegMqjYrPgsyLQPW/Z1+mvIPEQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","regionNames","housingTypeNames","Dashboard","_s","data","setData","err","setErr","selectedType","setSelectedType","fetch","then","res","json","catch","nbpRefHistoryAvg","setNbpRefHistoryAvg","nbpRefHistoryAvgFiltered","filter","r","parseInt","year","nbpRefHistoryLabels","map","nbpRefHistoryValues","avgRate","nbpRefHistoryChartData","labels","datasets","label","borderColor","backgroundColor","tension","allRegionIds","Object","keys","visibleRegions","setVisibleRegions","fromEntries","id","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","handleRegionCheckbox","regionId","prev","housingTypeData","housing","region","_region$data","results","_r$values$","values","val","_r$values$2","Math","abs","split","reduce","a","c","charCodeAt","toString","padStart","years","Array","from","length","_","i","housingChartData","value","onChange","e","target","entries","typeId","name","maxWidth","margin","options","scales","y","title","display","text","ticks","stepSize","callback","toLocaleString","x","flexWrap","gap","marginRight","type","checked","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/integra_v2/integra_v2/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst regionNames = {\n  '023210000000': 'REGION ZACHODNIOPOMORSKIE',\n  '030210000000': 'REGION DOLNOŚLĄSKIE',\n  '031610000000': 'REGION OPOLSKIE',\n  '040410000000': 'REGION KUJAWSKO-POMORSKIE',\n  '042210000000': 'REGION POMORSKIE',\n  '042810000000': 'REGION WARMIŃSKO-MAZURSKIE',\n  '051010000000': 'REGION ŁÓDZKIE',\n  '052610000000': 'REGION ŚWIĘTOKRZYSKIE',\n  '060610000000': 'REGION LUBELSKIE',\n  '061810000000': 'REGION PODKARPACKIE',\n  '062010000000': 'REGION PODLASKIE',\n  '071410000000': 'REGION WARSZAWSKI STOŁECZNY',\n  '071420000000': 'REGION MAZOWIECKI REGIONALNY',\n  '011210000000': 'REGION MAŁOPOLSKIE',\n  '012410000000': 'REGION ŚLĄSKIE',\n  '020810000000': 'REGION LUBUSKIE',\n  '023010000000': 'REGION WIELKOPOLSKIE',\n};\nconst housingTypeNames = {\n  '633663': 'do 40m2',\n  '633664': 'od 40.1 m2 do 60m2',\n  '633665': 'od 60m2 do 80m2',\n  '633666': 'od 80m2',\n};\n\nconst Dashboard = () => {\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState('');\n  const [selectedType, setSelectedType] = useState('633663'); // domyślny typ\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/bdl-data')\n      .then(res => res.json())\n      .then(setData)\n      .catch(() => setErr('Błąd pobierania danych z serwera'));\n  }, []);\n\n  const [nbpRefHistoryAvg, setNbpRefHistoryAvg] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/nbp-ref-history-avg')\n      .then(res => res.json())\n      .then(setNbpRefHistoryAvg)\n      .catch(() => {});\n  }, []);\n\n  const nbpRefHistoryAvgFiltered = nbpRefHistoryAvg.filter(\n    r => parseInt(r.year, 10) >= 2013 && parseInt(r.year, 10) <= 2023\n  );\n\n  const nbpRefHistoryLabels = nbpRefHistoryAvgFiltered.map(r => r.year);\n  const nbpRefHistoryValues = nbpRefHistoryAvgFiltered.map(r => r.avgRate);\n\n  const nbpRefHistoryChartData = {\n    labels: nbpRefHistoryLabels,\n    datasets: [\n      {\n        label: 'Średnia roczna stopa referencyjna NBP',\n        data: nbpRefHistoryValues,\n        borderColor: 'orange',\n        backgroundColor: 'rgba(255,165,0,0.1)',\n        tension: 0.2,\n      },\n    ],\n  };\n\n   // Pobierz dane dla wybranego typu mieszkania\n   const allRegionIds = Object.keys(regionNames);\n   const [visibleRegions, setVisibleRegions] = useState(() =>\n     Object.fromEntries(allRegionIds.map(id => [id, true]))\n   );\n  if (err) return <div style={{ color: 'red' }}>{err}</div>;\n  if (!data) return <div>Ładowanie danych...</div>;\n\n \n\n  // UWAGA: useState nie może być po warunku! Przenieś go wyżej, jak wyżej w tym kodzie.\n\n  const handleRegionCheckbox = (regionId) => {\n    setVisibleRegions(prev => ({\n      ...prev,\n      [regionId]: !prev[regionId]\n    }));\n  };\n\n  const housingTypeData = data.housing[selectedType] || [];\n  const datasets = housingTypeData\n    .filter(region => visibleRegions[region.regionId])\n    .map(region => {\n      const results = (region.data?.results || []).filter(\n        r => r.values[0]?.val != null && r.year >= 2013 && r.year <= 2023\n      );\n      return {\n        label: regionNames[region.regionId] || region.regionId,\n        data: results.map(r => r.values[0]?.val),\n        borderColor: '#' + ((Math.abs(region.regionId.split('').reduce((a, c) => a + c.charCodeAt(0), 0)) * 1234567) % 0xffffff).toString(16).padStart(6, '0'),\n        backgroundColor: 'rgba(0,0,0,0.05)',\n        tension: 0.2,\n      };\n    });\n\n  const years = Array.from({ length: 11 }, (_, i) => (2013 + i).toString());\n\n  const housingChartData = {\n    labels: years,\n    datasets,\n  };\n\n  return (\n    <div>\n      <h1>Panel użytkownika</h1>\n      <p>Jesteś zalogowany!</p>\n      <h2>Dane z BDL</h2>\n      <div>\n        <label>Typ mieszkania:&nbsp;\n          <select value={selectedType} onChange={e => setSelectedType(e.target.value)}>\n            {Object.entries(housingTypeNames).map(([typeId, name]) => (\n              <option key={typeId} value={typeId}>{name}</option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div style={{ maxWidth: 800, margin: '2rem auto' }}>\n        <h3>Ceny mieszkań</h3>\n        <Line\n  data={housingChartData}\n  options={{\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: 'Cena (PLN)'\n        },\n        ticks: {\n          stepSize: 50000,\n          callback: function(value) {\n            return value.toLocaleString('pl-PL') + ' zł';\n          }\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Rok'\n        }\n      }\n    }\n  }}\n/>\n        <div style={{ margin: '1rem 0' }}>\n          <strong>Pokaż regiony:</strong>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n            {allRegionIds.map(regionId => (\n              <label key={regionId} style={{ marginRight: 8 }}>\n                <input\n                  type=\"checkbox\"\n                  checked={visibleRegions[regionId]}\n                  onChange={() => handleRegionCheckbox(regionId)}\n                />\n                {regionNames[regionId]}\n              </label>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div style={{ maxWidth: 800, margin: '2rem auto' }}>\n        <h3>Stopa referencyjna NBP (historia)</h3>\n        <Line data={nbpRefHistoryChartData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMI,WAAW,GAAG;EAClB,cAAc,EAAE,2BAA2B;EAC3C,cAAc,EAAE,qBAAqB;EACrC,cAAc,EAAE,iBAAiB;EACjC,cAAc,EAAE,2BAA2B;EAC3C,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,4BAA4B;EAC5C,cAAc,EAAE,gBAAgB;EAChC,cAAc,EAAE,uBAAuB;EACvC,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,qBAAqB;EACrC,cAAc,EAAE,kBAAkB;EAClC,cAAc,EAAE,6BAA6B;EAC7C,cAAc,EAAE,8BAA8B;EAC9C,cAAc,EAAE,oBAAoB;EACpC,cAAc,EAAE,gBAAgB;EAChC,cAAc,EAAE,iBAAiB;EACjC,cAAc,EAAE;AAClB,CAAC;AACD,MAAMC,gBAAgB,GAAG;EACvB,QAAQ,EAAE,SAAS;EACnB,QAAQ,EAAE,oBAAoB;EAC9B,QAAQ,EAAE,iBAAiB;EAC3B,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACoB,GAAG,EAAEC,MAAM,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAE5DD,SAAS,CAAC,MAAM;IACdyB,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACN,OAAO,CAAC,CACbS,KAAK,CAAC,MAAMP,MAAM,CAAC,kCAAkC,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACdyB,KAAK,CAAC,+CAA+C,CAAC,CACnDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACK,mBAAmB,CAAC,CACzBF,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,wBAAwB,GAAGF,gBAAgB,CAACG,MAAM,CACtDC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,IAAID,QAAQ,CAACD,CAAC,CAACE,IAAI,EAAE,EAAE,CAAC,IAAI,IAC/D,CAAC;EAED,MAAMC,mBAAmB,GAAGL,wBAAwB,CAACM,GAAG,CAACJ,CAAC,IAAIA,CAAC,CAACE,IAAI,CAAC;EACrE,MAAMG,mBAAmB,GAAGP,wBAAwB,CAACM,GAAG,CAACJ,CAAC,IAAIA,CAAC,CAACM,OAAO,CAAC;EAExE,MAAMC,sBAAsB,GAAG;IAC7BC,MAAM,EAAEL,mBAAmB;IAC3BM,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,uCAAuC;MAC9CzB,IAAI,EAAEoB,mBAAmB;MACzBM,WAAW,EAAE,QAAQ;MACrBC,eAAe,EAAE,qBAAqB;MACtCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;;EAEA;EACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACnC,WAAW,CAAC;EAC7C,MAAM,CAACoC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnD,QAAQ,CAAC,MACnDgD,MAAM,CAACI,WAAW,CAACL,YAAY,CAACV,GAAG,CAACgB,EAAE,IAAI,CAACA,EAAE,EAAE,IAAI,CAAC,CAAC,CACvD,CAAC;EACF,IAAIjC,GAAG,EAAE,oBAAOR,OAAA;IAAK0C,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,EAAEpC;EAAG;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACzD,IAAI,CAAC1C,IAAI,EAAE,oBAAON,OAAA;IAAA4C,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAIhD;;EAEA,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzCX,iBAAiB,CAACY,IAAI,KAAK;MACzB,GAAGA,IAAI;MACP,CAACD,QAAQ,GAAG,CAACC,IAAI,CAACD,QAAQ;IAC5B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,eAAe,GAAG9C,IAAI,CAAC+C,OAAO,CAAC3C,YAAY,CAAC,IAAI,EAAE;EACxD,MAAMoB,QAAQ,GAAGsB,eAAe,CAC7BhC,MAAM,CAACkC,MAAM,IAAIhB,cAAc,CAACgB,MAAM,CAACJ,QAAQ,CAAC,CAAC,CACjDzB,GAAG,CAAC6B,MAAM,IAAI;IAAA,IAAAC,YAAA;IACb,MAAMC,OAAO,GAAG,CAAC,EAAAD,YAAA,GAAAD,MAAM,CAAChD,IAAI,cAAAiD,YAAA,uBAAXA,YAAA,CAAaC,OAAO,KAAI,EAAE,EAAEpC,MAAM,CACjDC,CAAC;MAAA,IAAAoC,UAAA;MAAA,OAAI,EAAAA,UAAA,GAAApC,CAAC,CAACqC,MAAM,CAAC,CAAC,CAAC,cAAAD,UAAA,uBAAXA,UAAA,CAAaE,GAAG,KAAI,IAAI,IAAItC,CAAC,CAACE,IAAI,IAAI,IAAI,IAAIF,CAAC,CAACE,IAAI,IAAI,IAAI;IAAA,CACnE,CAAC;IACD,OAAO;MACLQ,KAAK,EAAE7B,WAAW,CAACoD,MAAM,CAACJ,QAAQ,CAAC,IAAII,MAAM,CAACJ,QAAQ;MACtD5C,IAAI,EAAEkD,OAAO,CAAC/B,GAAG,CAACJ,CAAC;QAAA,IAAAuC,WAAA;QAAA,QAAAA,WAAA,GAAIvC,CAAC,CAACqC,MAAM,CAAC,CAAC,CAAC,cAAAE,WAAA,uBAAXA,WAAA,CAAaD,GAAG;MAAA,EAAC;MACxC3B,WAAW,EAAE,GAAG,GAAG,CAAE6B,IAAI,CAACC,GAAG,CAACR,MAAM,CAACJ,QAAQ,CAACa,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,GAAI,QAAQ,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACtJpC,eAAe,EAAE,kBAAkB;MACnCC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,CAAC;EAEJ,MAAMoC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,CAAC,IAAI,GAAGA,CAAC,EAAEP,QAAQ,CAAC,CAAC,CAAC;EAEzE,MAAMQ,gBAAgB,GAAG;IACvB/C,MAAM,EAAEyC,KAAK;IACbxC;EACF,CAAC;EAED,oBACE9B,OAAA;IAAA4C,QAAA,gBACE5C,OAAA;MAAA4C,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhD,OAAA;MAAA4C,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACzBhD,OAAA;MAAA4C,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhD,OAAA;MAAA4C,QAAA,eACE5C,OAAA;QAAA4C,QAAA,GAAO,qBACL,eAAA5C,OAAA;UAAQ6E,KAAK,EAAEnE,YAAa;UAACoE,QAAQ,EAAEC,CAAC,IAAIpE,eAAe,CAACoE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAjC,QAAA,EACzER,MAAM,CAAC6C,OAAO,CAAC9E,gBAAgB,CAAC,CAACsB,GAAG,CAAC,CAAC,CAACyD,MAAM,EAAEC,IAAI,CAAC,kBACnDnF,OAAA;YAAqB6E,KAAK,EAAEK,MAAO;YAAAtC,QAAA,EAAEuC;UAAI,GAA5BD,MAAM;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+B,CACnD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNhD,OAAA;MAAK0C,KAAK,EAAE;QAAE0C,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAY,CAAE;MAAAzC,QAAA,gBACjD5C,OAAA;QAAA4C,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBhD,OAAA,CAACX,IAAI;QACXiB,IAAI,EAAEsE,gBAAiB;QACvBU,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR,CAAC;cACDC,KAAK,EAAE;gBACLC,QAAQ,EAAE,KAAK;gBACfC,QAAQ,EAAE,SAAAA,CAASjB,KAAK,EAAE;kBACxB,OAAOA,KAAK,CAACkB,cAAc,CAAC,OAAO,CAAC,GAAG,KAAK;gBAC9C;cACF;YACF,CAAC;YACDC,CAAC,EAAE;cACDP,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF;UACF;QACF;MAAE;QAAA9C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACMhD,OAAA;QAAK0C,KAAK,EAAE;UAAE2C,MAAM,EAAE;QAAS,CAAE;QAAAzC,QAAA,gBAC/B5C,OAAA;UAAA4C,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/BhD,OAAA;UAAK0C,KAAK,EAAE;YAAEgD,OAAO,EAAE,MAAM;YAAEO,QAAQ,EAAE,MAAM;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAAtD,QAAA,EACvDT,YAAY,CAACV,GAAG,CAACyB,QAAQ,iBACxBlD,OAAA;YAAsB0C,KAAK,EAAE;cAAEyD,WAAW,EAAE;YAAE,CAAE;YAAAvD,QAAA,gBAC9C5C,OAAA;cACEoG,IAAI,EAAC,UAAU;cACfC,OAAO,EAAE/D,cAAc,CAACY,QAAQ,CAAE;cAClC4B,QAAQ,EAAEA,CAAA,KAAM7B,oBAAoB,CAACC,QAAQ;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,EACD9C,WAAW,CAACgD,QAAQ,CAAC;UAAA,GANZA,QAAQ;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOb,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhD,OAAA;MAAK0C,KAAK,EAAE;QAAE0C,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAY,CAAE;MAAAzC,QAAA,gBACjD5C,OAAA;QAAA4C,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1ChD,OAAA,CAACX,IAAI;QAACiB,IAAI,EAAEsB;MAAuB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAlJID,SAAS;AAAAkG,EAAA,GAATlG,SAAS;AAoJf,eAAeA,SAAS;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}