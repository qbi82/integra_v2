{"ast":null,"code":"var _jsxFileName = \"D:\\\\htdocs\\\\integra\\\\integra_v2\\\\integra_v2\\\\client\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isRegister, setIsRegister] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const url = isRegister ? 'http://localhost:4000/auth/register' : 'http://localhost:4000/auth/login';\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        if (!isRegister) {\n          localStorage.setItem('token', data.token); // JWT zapisany w localStorage\n          navigate('/dashboard');\n        } else {\n          setIsRegister(false);\n          setError('Rejestracja udana! Możesz się zalogować.');\n        }\n      } else {\n        setError(data.message || (isRegister ? 'Błąd rejestracji' : 'Błąd logowania'));\n      }\n    } catch {\n      setError('Błąd połączenia z serwerem');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegister ? 'Rejestracja' : 'Logowanie'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Login\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Has\\u0142o\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: isRegister ? 'Zarejestruj' : 'Zaloguj'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setIsRegister(r => !r);\n        setError('');\n      },\n      children: isRegister ? 'Masz konto? Zaloguj się' : 'Zarejestruj się'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isRegister && error.startsWith('Rejestracja udana') ? 'success-message' : 'error-message',\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(LoginForm, \"yqRq+LbN9D2DjrzkuwB/7rf9vlo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","error","setError","isRegister","setIsRegister","navigate","handleSubmit","e","preventDefault","url","res","fetch","method","headers","body","JSON","stringify","data","json","success","localStorage","setItem","token","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","r","startsWith","_c","$RefreshReg$"],"sources":["D:/htdocs/integra/integra_v2/integra_v2/client/src/components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      const url = isRegister\r\n        ? 'http://localhost:4000/auth/register'\r\n        : 'http://localhost:4000/auth/login';\r\n      const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        if (!isRegister) {\r\n          localStorage.setItem('token', data.token); // JWT zapisany w localStorage\r\n          navigate('/dashboard');\r\n        } else {\r\n          setIsRegister(false);\r\n          setError('Rejestracja udana! Możesz się zalogować.');\r\n        }\r\n      } else {\r\n        setError(data.message || (isRegister ? 'Błąd rejestracji' : 'Błąd logowania'));\r\n      }\r\n    } catch {\r\n      setError('Błąd połączenia z serwerem');\r\n    }\r\n  };\r\n\r\n  return (\r\n  <form onSubmit={handleSubmit} className=\"login-container\">\r\n    <h2>{isRegister ? 'Rejestracja' : 'Logowanie'}</h2>\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Login\"\r\n      value={username}\r\n      onChange={e => setUsername(e.target.value)}\r\n      required\r\n    />\r\n    <input\r\n      type=\"password\"\r\n      placeholder=\"Hasło\"\r\n      value={password}\r\n      onChange={e => setPassword(e.target.value)}\r\n      required\r\n    />\r\n    <button type=\"submit\">{isRegister ? 'Zarejestruj' : 'Zaloguj'}</button>\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        setIsRegister(r => !r);\r\n        setError('');\r\n      }}\r\n    >\r\n      {isRegister ? 'Masz konto? Zaloguj się' : 'Zarejestruj się'}\r\n    </button>\r\n    {error && (\r\n      <div className={isRegister && error.startsWith('Rejestracja udana') ? 'success-message' : 'error-message'}>\r\n        {error}\r\n      </div>\r\n    )}\r\n  </form>\r\n);\r\n};\r\n\r\nexport default LoginForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}